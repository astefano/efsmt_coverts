var
	alpha3, beta3, gamma3, eta3: parameter;
	ts3, t3, htakeleftphio3, hreleasephio3, hendphio3, heatphio3: clock;


automaton Philo3h

synclabs: takeleftphio3, eatphio3, releasephio3, endphio3;

loc p31: while gamma3 - t3 >= 0 wait {}
		 when t3 - eta3 <= 0 sync takeleftphio3 do {t3' = 0, htakeleftphio3' = 0} goto p32;

loc p32: while -t3 >= -7 wait {}
		 when t3 <= 4 sync eatphio3 do {t3' = 0, heatphio3' = 0} goto p33;

loc p33: while -t3 >= -5 wait {}
		 when t3 <= 2 sync releasephio3 do {hreleasephio3' = 0} goto p30;

loc p30: while alpha3 - t3 >= 0 wait {}
		 when ts3 - beta3 <= 0 sync endphio3 do {t3' = 0, ts3' = 0, hendphio3' = 0} goto p31;

end


var init: region;

init:= loc[Philo3h] = p31
		 & t3 = 0 & hendphio3 = 0 & ts3 = 0 & heatphio3 = 0 & eta3 = 0 & hreleasephio3 = 0 & beta3 = 0 & gamma3 = 0 & alpha3 = 0 & htakeleftphio3 = 0
;