var
	alpha1, beta1, gamma1, eta1: parameter;
	hendphio1, heatphio1, ts1, hreleasephio1, t1, htakeleftphio1: clock;


automaton Philo1h

synclabs: takeleftphio1, eatphio1, releasephio1, endphio1;

loc p11: while gamma1 - t1 >= 0 wait {}
		 when t1 - eta1 <= 0 sync takeleftphio1 do {t1' = 0, htakeleftphio1' = 0} goto p12;

loc p12: while -t1 >= -3 wait {}
		 when t1 <= 2 sync eatphio1 do {t1' = 0, heatphio1' = 0} goto p13;

loc p13: while -t1 >= -3 wait {}
		 when t1 <= 2 sync releasephio1 do {hreleasephio1' = 0} goto p10;

loc p10: while alpha1 - t1 >= 0 wait {}
		 when ts1 - beta1 <= 0 sync endphio1 do {t1' = 0, ts1' = 0, hendphio1' = 0} goto p11;

end


var init: region;

init:= loc[Philo1h] = p11
		 & heatphio1 = 0 & eta1 = 0 & hreleasephio1 = 0 & alpha1 = 0 & beta1 = 0 & gamma1 = 0 & ts1 = 0 & t1 = 0 & htakeleftphio1 = 0 & hendphio1 = 0
;