
Assumption([hac == hat0] && [hec == het0] && [hlc == hlg] && [hrc == hrg])


Forall(heps) REAL
Forall(in) 
Exists(t2) INT
Exists(t1) INT
Forall(het0) REAL
Forall(x) REAL
Forall(near) 
Exists(t0) INT
Forall(hat0) REAL

Assumption([x >= 0])
Assumption([het0 >= 0])
Assumption([hat0 >= 0])
Assumption([heps >= 0])

Forall(far) 


Assumption( far  && [ heps >= 0] && [ x == heps] && [ het0 == heps] && [ hat0 == heps] ||  near  && [ t0 >= x] && [ het0 >= x] && [ x >= 0] && [ x == hat0] && [ het0 == heps] ||  in  && [ t0 + heps >= x] && [ t2 >= x] && [ x >= heps] && [ heps >= 0] && [ het0 >= x] && [ x >= t1 + heps] && [ x == hat0] ||  far  && [ t0 + heps >= x] && [ t2 + het0 >= x] && [ x >= heps] && [ het0 >= 0] && [ heps >= het0] && [ x >= t1 + heps] && [ x == hat0] ||  near  && [ t0 >= x] && [ t0 >= t1] && [ t2 + het0 >= heps] && [ het0 >= x] && [ x >= 0] && [ heps >= het0] && [ t2 + het0 >= t1 + heps] && [ x == hat0])
Assumption([hac == hat0] && [hec == het0] && [hlc == hlg] && [hrc == hrg])


Exists(c1) INT
Forall(hec) REAL
Forall(C0) 
Forall(C3) 
Forall(hrc) REAL
Forall(C2) 

Assumption([hac >= 0])
Assumption([hrc >= 0])
Assumption([hlc >= 0])
Assumption([hec >= 0])
Assumption([z >= 0])

Exists(c2) INT
Forall(C1) 
Forall(hlc) REAL
Forall(z) REAL
Forall(hac) REAL
Exists(c0) INT


Assumption( C0  && [ z >= 0] && [ hac == z] && [ hrc == z] && [ hlc == z] && [ hec == z] ||  C1  && [ c0 >= hac] && [ hrc >= hac] && [ hac >= 0] && [ hrc == hlc] && [ hrc == hec] && [ hac == z] ||  C2  && [ c0 >= c1] && [ c1 >= 0] && [ hrc >= z] && [ z >= c1] && [ c1 + hlc == z] && [ hac == z] && [ hrc == hec] ||  C3  && [ c0 >= c1] && [ c1 >= 0] && [ c2 >= hec] && [ hec >= 0] && [ hrc >= hac] && [ hac >= c1 + hec] && [ c1 + hlc == hac] && [ hec == z] ||  C0  && [ c0 >= c1] && [ c1 >= 0] && [ c2 + hrc >= hec] && [ hrc >= 0] && [ hec >= hrc] && [ hac >= c1 + hec] && [ c1 + hlc == hac] && [ hec == z] ||  C1  && [ c0 >= hac] && [ c0 >= c1] && [ c1 >= 0] && [ c2 + hrc >= hec] && [ hrc >= hac] && [ hlc >= hec] && [ hac >= 0] && [ hec >= hrc] && [ hac == z] ||  C2  && [ c0 >= c1] && [ c1 >= 0] && [ c2 + hrc >= hec] && [ hrc >= z] && [ hec >= hrc] && [ z >= c1] && [ c1 + hlc == z] && [ hac == z])
Assumption([hac == hat0] && [hec == het0] && [hlc == hlg] && [hrc == hrg])


Exists(g1) INT
Exists(g0) INT
Forall(going_up) 
Forall(is_down) 
Exists(g2) INT

Assumption([y >= 0])
Assumption([hepsg >= 0])
Assumption([hlg >= 0])
Assumption([hrg >= 0])

Forall(is_up) 
Forall(hlg) REAL
Forall(hrg) REAL
Forall(y) REAL
Forall(coming_down) 
Forall(hepsg) REAL


Assumption( is_up  && [ hrg >= 0] && [ y == hrg] && [ hepsg == hrg] && [ hlg == hrg] ||  coming_down  && [ g0 >= y] && [ hepsg >= y] && [ y >= 0] && [ y == hlg] && [ hepsg == hrg] ||  is_down  && [ g0 + hepsg >= y] && [ y >= hepsg] && [ hepsg >= 0] && [ hrg >= y] && [ y == hlg] ||  going_up  && [ g0 + hepsg >= hlg] && [ g1 >= y] && [ hepsg >= y] && [ y >= 0] && [ hlg >= hepsg] && [ y == hrg] ||  is_up  && [ g0 >= 0] && [ g1 + hepsg >= y] && [ y >= hepsg] && [ hepsg >= 0] && [ hlg >= y] && [ y >= g2 + hepsg] && [ y == hrg] ||  coming_down  && [ g0 >= y] && [ g1 + hepsg >= hrg] && [ hepsg >= y] && [ y >= 0] && [ hrg >= hepsg] && [ hrg >= g2 + hepsg] && [ y == hlg] ||  is_down  && [ g0 + hepsg >= y] && [ g1 >= 0] && [ g1 >= g2] && [ y >= hepsg] && [ hepsg >= 0] && [ hrg >= y] && [ hrg >= g2 + y] && [ y == hlg] ||  going_up  && [ g0 + hepsg >= hlg] && [ g1 >= y] && [ g1 >= g2] && [ hepsg >= y] && [ y >= 0] && [ hlg >= hepsg] && [ y == hrg])

%abstract reach
Assumption(in && C2 && coming_down || near && C1 && is_up || in && C1 && is_up || near && C2 && coming_down || near && C1 && is_up || far && C0 && is_up) 

Guarantee(in &&  C2 &&  coming_down && [x - t2 + 0 <= 0] && [ g0 - y >= 0] || near && C1 && is_up && [x - t1 >= 0] && [ x - t0 + 0 <= 0] && [ x - t2 + 0 <= 0] && [ c0 - z >= 0] || in &&  C1 &&  is_up && [c1 - z == 0] && [ x - t2 + 0 <= 0] && [ c1 - c0 + 0 <= 0] || near && C2 && coming_down && [x - t1 >= 0] && [ x - t0 + 0 <= 0] && [ x - t2 + 0 <= 0] && [ g0 - y >= 0] || near &&  C1 &&  is_up && [c1 - z == 0] && [ x - t0 + 0 <= 0] && [ c1 - c0 + 0 <= 0] || far &&  C0 &&  is_up && [])



Condition([t0 >= 0])
Condition([g2 >= 0])
Condition([c2 >= 0])
Condition([g1 >= 0])
Condition([c1 >= 0])
Condition([t2 >= 0])
Condition([g0 >= 0])
Condition([c0 >= 0])
Condition([t1 >= 0])
