var vr0, vr1, m, M, T: parameter;

automaton Controller

var t : analog;
 hheat, hcool: clock;

synclabs: cool0, rest0, cool1, rest1;

loc lc1: while t <= M wait {t'=6}
	when t = M sync cool0 do {t'=t,hcool'=0} goto lc2;
	when t = M sync cool1 do {t'=t,hcool'=0} goto lc3;

loc lc2: while t >= m wait {t'=-2}
	when t = m sync rest0 do {t'=t,hheat'=0} goto lc1;

loc lc3: while t >= m wait {t'=-2}
	when t = m sync rest1 do {t'=t,hheat'=0} goto lc1;

end

automaton Rod0

var	t0, hcool0, hrest0: clock;

synclabs: cool0, rest0;

loc l10: while True wait {}
	when t0 >= T sync cool0 do {hcool0'=0} goto l20;

loc l20: while True wait {}
	when True sync rest0 do {t0'=0,hrest0'=0} goto l10;

end

automaton Rod1

var	t1, hcool1, hrest1: clock;

synclabs: cool1, rest1;

loc l11: while True wait {}
	when t1 >= T sync cool1 do {hcool1'=0} goto l21;

loc l21: while True wait {}
	when True sync rest1 do {t1'=0,hrest1'=0} goto l11;

end

var init: region;

init:=	loc[Controller] = lc1 & t = 0 &
	loc[Rod0] = l10 & t0 = T & 
	loc[Rod1] = l11  & t1 = T & M = 15 & m = 3 & T = 6 &
	hcool0 = 0 & hcool1 > hcool0 & hrest0 = 0 & hrest1 > hrest0 & hcool = 0 & hheat > hcool
;

