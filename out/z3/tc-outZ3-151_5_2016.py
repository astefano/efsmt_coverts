from z3 import *

def myin(s1, s2):
	for x in s1:
		if not(x in s2): 
			return False 
	print s1; print " is in "; print s2
	return True

def getII(F):
	 blockAnd = []
	 s = Solver()
	 s.add(F)
	 while True:
		 if s.check() == sat:
			 m = s.model()
			 # Create a new constraint the blocks the current model
			 block = []
			 blockOr = []
			 for d in m:
				 c = d()
				 block.append(And(Not(c), m[d]))
				 #block.append(And(c, Not(m[d])))
				 if m[d].sexpr() == 'true': 
				 	 blockOr.append(c)
			 #if block != []:		
			 #	s.add(Or(block))
			 if blockOr != []:
			         s.add(Or(block))		
				 blockAnd.append(Or(blockOr))		
		         	 print "m = ", m 		
				 print "block = ", Or(block)
		 else:
			 return And(blockAnd)


def getIIOld(F):
	 blockAnd = []
	 s = Solver()
	 s.add(F)
	 while True:
		 if s.check() == sat:
			 m = s.model()
			 # Create a new constraint the blocks the current model
			 block = []
			 blockOr = []
			 for d in m:
				 c = d()
				 block.append(c != m[d])
				 if m[d].sexpr() == 'true': 
					 blockOr.append(c)
				 # d is a declaration                                                                                                                                     
				 # create a constant from declaration
			 if block != []:		
			 	s.add(Or(block))
			 if len(blockOr) > 1: 
			 	blockAnd.append(Or(blockOr))
			 elif len(blockOr) == 1:	
			 	blockAnd.append(blockOr[0])
		 else:
			 return And(blockAnd)

def getAllModels(F, lim):
	 result = []
	 s = Solver()
	 s.add(F)
	 i = 0
	 while i < lim:
		 i = i + 1
		 if s.check() == sat:
			 m = s.model()
			 result.append(m)
			 #printModel(m)	
			 block = []
			 for d in m:
				 c = d()
				 block.append(c != m[d])
				 #if block != []:		
			 s.add(Or(block))
		 else:
			 return result

def printModels(models):
	for m in models:
		printModel(m)

def printModel(M):
	print "["
	for d in M: 
		if M[d].sexpr() != 'false':
			print "%s = %s" % (d.name(), M[d])
	print "]"

#given a formula F and a model M, return F[M]
def subst(F, M):
	r = F
	for d in M: 
		if M[d].sort().sexpr() == 'Bool':
			r = substitute(r,((Bool(d.name()), BoolVal(str(M[d])))))
		elif M[d].sort().sexpr() == 'Int':
			r = substitute(r, ((Int(d.name()), IntVal(str(M[d])))))
	return r

def getCEX(F):
    toSolve = Solver()
    toSolve.add(F)
    if toSolve.check() == sat:
        m = toSolve.model()
        printModel(m)
    else:
        print "no solution"



l0_16, l1_16 = Bools('l0_16 l1_16')
l0_9, l1_9 = Bools('l0_9 l1_9')
l0_32, l1_32 = Bools('l0_32 l1_32')
l0_10, l1_10 = Bools('l0_10 l1_10')
l0_4, l1_4 = Bools('l0_4 l1_4')
l0_23, l1_23 = Bools('l0_23 l1_23')
l0_22, l1_22 = Bools('l0_22 l1_22')
l0_27, l1_27 = Bools('l0_27 l1_27')
l0_20, l1_20 = Bools('l0_20 l1_20')
l0_11, l1_11 = Bools('l0_11 l1_11')
l0_19, l1_19 = Bools('l0_19 l1_19')
l0_26, l1_26 = Bools('l0_26 l1_26')
lc0, lc1 = Bools('lc0 lc1')
l0_30, l1_30 = Bools('l0_30 l1_30')
l0_8, l1_8 = Bools('l0_8 l1_8')
l0_5, l1_5 = Bools('l0_5 l1_5')
l0_3, l1_3 = Bools('l0_3 l1_3')
l0_31, l1_31 = Bools('l0_31 l1_31')
l0_28, l1_28 = Bools('l0_28 l1_28')
l0_15, l1_15 = Bools('l0_15 l1_15')
l0_14, l1_14 = Bools('l0_14 l1_14')
l0_0, l1_0 = Bools('l0_0 l1_0')
l0_18, l1_18 = Bools('l0_18 l1_18')
l0_29, l1_29 = Bools('l0_29 l1_29')
l0_25, l1_25 = Bools('l0_25 l1_25')
l0_17, l1_17 = Bools('l0_17 l1_17')
l0_21, l1_21 = Bools('l0_21 l1_21')
l0_13, l1_13 = Bools('l0_13 l1_13')
l0_6, l1_6 = Bools('l0_6 l1_6')
l0_1, l1_1 = Bools('l0_1 l1_1')
l0_7, l1_7 = Bools('l0_7 l1_7')
l0_2, l1_2 = Bools('l0_2 l1_2')
l0_12, l1_12 = Bools('l0_12 l1_12')
l0_24, l1_24 = Bools('l0_24 l1_24')
x_16, hcool_16, ct, hrest_16 = Ints('x_16 hcool_16 ct hrest_16')
ct, hrest_9, hcool_9, x_9 = Ints('ct hrest_9 hcool_9 x_9')
x_32, hrest_32, hcool_32, ct = Ints('x_32 hrest_32 hcool_32 ct')
ct, x_10, hcool_10, hrest_10 = Ints('ct x_10 hcool_10 hrest_10')
x_4, ct, hrest_4, hcool_4 = Ints('x_4 ct hrest_4 hcool_4')
hcool_23, x_23, ct, hrest_23 = Ints('hcool_23 x_23 ct hrest_23')
ct, hrest_22, hcool_22, x_22 = Ints('ct hrest_22 hcool_22 x_22')
hrest_27, hcool_27, ct, x_27 = Ints('hrest_27 hcool_27 ct x_27')
hcool_20, ct, x_20, hrest_20 = Ints('hcool_20 ct x_20 hrest_20')
x_11, ct, hrest_11, hcool_11 = Ints('x_11 ct hrest_11 hcool_11')
hrest_19, x_19, hcool_19, ct = Ints('hrest_19 x_19 hcool_19 ct')
x_26, hcool_26, ct, hrest_26 = Ints('x_26 hcool_26 ct hrest_26')
p, hcoolc, hrestc, xc = Ints('p hcoolc hrestc xc')
x_30, hcool_30, ct, hrest_30 = Ints('x_30 hcool_30 ct hrest_30')
hrest_8, ct, x_8, hcool_8 = Ints('hrest_8 ct x_8 hcool_8')
hcool_5, ct, hrest_5, x_5 = Ints('hcool_5 ct hrest_5 x_5')
ct, hcool_3, hrest_3, x_3 = Ints('ct hcool_3 hrest_3 x_3')
hcool_31, hrest_31, x_31, ct = Ints('hcool_31 hrest_31 x_31 ct')
hcool_28, hrest_28, ct, x_28 = Ints('hcool_28 hrest_28 ct x_28')
hrest_15, x_15, hcool_15, ct = Ints('hrest_15 x_15 hcool_15 ct')
hcool_14, x_14, ct, hrest_14 = Ints('hcool_14 x_14 ct hrest_14')
hrest_0, hcool_0, x_0, ct = Ints('hrest_0 hcool_0 x_0 ct')
hcool_18, hrest_18, x_18, ct = Ints('hcool_18 hrest_18 x_18 ct')
hrest_29, x_29, hcool_29, ct = Ints('hrest_29 x_29 hcool_29 ct')
hcool_25, x_25, hrest_25, ct = Ints('hcool_25 x_25 hrest_25 ct')
hrest_17, hcool_17, x_17, ct = Ints('hrest_17 hcool_17 x_17 ct')
hrest_21, x_21, hcool_21, ct = Ints('hrest_21 x_21 hcool_21 ct')
hcool_13, x_13, hrest_13, ct = Ints('hcool_13 x_13 hrest_13 ct')
x_6, hcool_6, ct, hrest_6 = Ints('x_6 hcool_6 ct hrest_6')
ct, hcool_1, x_1, hrest_1 = Ints('ct hcool_1 x_1 hrest_1')
ct, hrest_7, hcool_7, x_7 = Ints('ct hrest_7 hcool_7 x_7')
hcool_2, hrest_2, x_2, ct = Ints('hcool_2 hrest_2 x_2 ct')
ct, x_12, hcool_12, hrest_12 = Ints('ct x_12 hcool_12 hrest_12')
hcool_24, hrest_24, x_24, ct = Ints('hcool_24 hrest_24 x_24 ct')



































ciRod_16hh = Or(And(l0_16,  hrest_16 >= 0,  x_16 == hrest_16,  hcool_16 == hrest_16), And(l1_16,  x_16 >= hcool_16,  hcool_16 >= 0,  x_16 >= ct + hcool_16,  x_16 == hrest_16), And(l0_16,  hcool_16 >= hrest_16,  hrest_16 >= 0,  x_16 == hrest_16))

NotAt2Locs_Rod_16hh  = Not(And(l0_16, l1_16))

Kp_Rod_16hh = And(Tactic('qe2').apply(Exists([x_16,hcool_16,hrest_16], And( hrest_16 >= 0, x_16 == hrest_16, hcool_16 == hrest_16))).as_expr(), Tactic('qe2').apply(Exists([x_16,hcool_16,hrest_16], And( x_16 >= hcool_16, hcool_16 >= 0, x_16 >= ct + hcool_16, x_16 == hrest_16))).as_expr())

ciRod_9hh = Or(And(l0_9,  hrest_9 >= 0,  x_9 == hrest_9,  hcool_9 == hrest_9), And(l1_9,  x_9 >= hcool_9,  hcool_9 >= 0,  x_9 >= ct + hcool_9,  x_9 == hrest_9), And(l0_9,  hcool_9 >= hrest_9,  hrest_9 >= 0,  x_9 == hrest_9))

NotAt2Locs_Rod_9hh  = Not(And(l0_9, l1_9))

Kp_Rod_9hh = And(Tactic('qe2').apply(Exists([x_9,hcool_9,hrest_9], And( hrest_9 >= 0, x_9 == hrest_9, hcool_9 == hrest_9))).as_expr(), Tactic('qe2').apply(Exists([x_9,hcool_9,hrest_9], And( x_9 >= hcool_9, hcool_9 >= 0, x_9 >= ct + hcool_9, x_9 == hrest_9))).as_expr())

ciRod_32hh = Or(And(l0_32,  hrest_32 >= 0,  x_32 == hrest_32,  hcool_32 == hrest_32), And(l1_32,  x_32 >= hcool_32,  hcool_32 >= 0,  x_32 >= ct + hcool_32,  x_32 == hrest_32), And(l0_32,  hcool_32 >= hrest_32,  hrest_32 >= 0,  x_32 == hrest_32))

NotAt2Locs_Rod_32hh  = Not(And(l0_32, l1_32))

Kp_Rod_32hh = And(Tactic('qe2').apply(Exists([x_32,hcool_32,hrest_32], And( hrest_32 >= 0, x_32 == hrest_32, hcool_32 == hrest_32))).as_expr(), Tactic('qe2').apply(Exists([x_32,hcool_32,hrest_32], And( x_32 >= hcool_32, hcool_32 >= 0, x_32 >= ct + hcool_32, x_32 == hrest_32))).as_expr())

ciRod_10hh = Or(And(l0_10,  hrest_10 >= 0,  x_10 == hrest_10,  hcool_10 == hrest_10), And(l1_10,  x_10 >= hcool_10,  hcool_10 >= 0,  x_10 >= ct + hcool_10,  x_10 == hrest_10), And(l0_10,  hcool_10 >= hrest_10,  hrest_10 >= 0,  x_10 == hrest_10))

NotAt2Locs_Rod_10hh  = Not(And(l0_10, l1_10))

Kp_Rod_10hh = And(Tactic('qe2').apply(Exists([x_10,hcool_10,hrest_10], And( hrest_10 >= 0, x_10 == hrest_10, hcool_10 == hrest_10))).as_expr(), Tactic('qe2').apply(Exists([x_10,hcool_10,hrest_10], And( x_10 >= hcool_10, hcool_10 >= 0, x_10 >= ct + hcool_10, x_10 == hrest_10))).as_expr())

ciRod_4hh = Or(And(l0_4,  hrest_4 >= 0,  x_4 == hrest_4,  hcool_4 == hrest_4), And(l1_4,  x_4 >= hcool_4,  hcool_4 >= 0,  x_4 >= ct + hcool_4,  x_4 == hrest_4), And(l0_4,  hcool_4 >= hrest_4,  hrest_4 >= 0,  x_4 == hrest_4))

NotAt2Locs_Rod_4hh  = Not(And(l0_4, l1_4))

Kp_Rod_4hh = And(Tactic('qe2').apply(Exists([x_4,hcool_4,hrest_4], And( hrest_4 >= 0, x_4 == hrest_4, hcool_4 == hrest_4))).as_expr(), Tactic('qe2').apply(Exists([x_4,hcool_4,hrest_4], And( x_4 >= hcool_4, hcool_4 >= 0, x_4 >= ct + hcool_4, x_4 == hrest_4))).as_expr())

ciRod_23hh = Or(And(l0_23,  hrest_23 >= 0,  x_23 == hrest_23,  hcool_23 == hrest_23), And(l1_23,  x_23 >= hcool_23,  hcool_23 >= 0,  x_23 >= ct + hcool_23,  x_23 == hrest_23), And(l0_23,  hcool_23 >= hrest_23,  hrest_23 >= 0,  x_23 == hrest_23))

NotAt2Locs_Rod_23hh  = Not(And(l0_23, l1_23))

Kp_Rod_23hh = And(Tactic('qe2').apply(Exists([x_23,hcool_23,hrest_23], And( hrest_23 >= 0, x_23 == hrest_23, hcool_23 == hrest_23))).as_expr(), Tactic('qe2').apply(Exists([x_23,hcool_23,hrest_23], And( x_23 >= hcool_23, hcool_23 >= 0, x_23 >= ct + hcool_23, x_23 == hrest_23))).as_expr())

ciRod_22hh = Or(And(l0_22,  hrest_22 >= 0,  x_22 == hrest_22,  hcool_22 == hrest_22), And(l1_22,  x_22 >= hcool_22,  hcool_22 >= 0,  x_22 >= ct + hcool_22,  x_22 == hrest_22), And(l0_22,  hcool_22 >= hrest_22,  hrest_22 >= 0,  x_22 == hrest_22))

NotAt2Locs_Rod_22hh  = Not(And(l0_22, l1_22))

Kp_Rod_22hh = And(Tactic('qe2').apply(Exists([x_22,hcool_22,hrest_22], And( hrest_22 >= 0, x_22 == hrest_22, hcool_22 == hrest_22))).as_expr(), Tactic('qe2').apply(Exists([x_22,hcool_22,hrest_22], And( x_22 >= hcool_22, hcool_22 >= 0, x_22 >= ct + hcool_22, x_22 == hrest_22))).as_expr())

ciRod_27hh = Or(And(l0_27,  hrest_27 >= 0,  x_27 == hrest_27,  hcool_27 == hrest_27), And(l1_27,  x_27 >= hcool_27,  hcool_27 >= 0,  x_27 >= ct + hcool_27,  x_27 == hrest_27), And(l0_27,  hcool_27 >= hrest_27,  hrest_27 >= 0,  x_27 == hrest_27))

NotAt2Locs_Rod_27hh  = Not(And(l0_27, l1_27))

Kp_Rod_27hh = And(Tactic('qe2').apply(Exists([x_27,hcool_27,hrest_27], And( hrest_27 >= 0, x_27 == hrest_27, hcool_27 == hrest_27))).as_expr(), Tactic('qe2').apply(Exists([x_27,hcool_27,hrest_27], And( x_27 >= hcool_27, hcool_27 >= 0, x_27 >= ct + hcool_27, x_27 == hrest_27))).as_expr())

ciRod_20hh = Or(And(l0_20,  hrest_20 >= 0,  x_20 == hrest_20,  hcool_20 == hrest_20), And(l1_20,  x_20 >= hcool_20,  hcool_20 >= 0,  x_20 >= ct + hcool_20,  x_20 == hrest_20), And(l0_20,  hcool_20 >= hrest_20,  hrest_20 >= 0,  x_20 == hrest_20))

NotAt2Locs_Rod_20hh  = Not(And(l0_20, l1_20))

Kp_Rod_20hh = And(Tactic('qe2').apply(Exists([x_20,hcool_20,hrest_20], And( hrest_20 >= 0, x_20 == hrest_20, hcool_20 == hrest_20))).as_expr(), Tactic('qe2').apply(Exists([x_20,hcool_20,hrest_20], And( x_20 >= hcool_20, hcool_20 >= 0, x_20 >= ct + hcool_20, x_20 == hrest_20))).as_expr())

ciRod_11hh = Or(And(l0_11,  hrest_11 >= 0,  x_11 == hrest_11,  hcool_11 == hrest_11), And(l1_11,  x_11 >= hcool_11,  hcool_11 >= 0,  x_11 >= ct + hcool_11,  x_11 == hrest_11), And(l0_11,  hcool_11 >= hrest_11,  hrest_11 >= 0,  x_11 == hrest_11))

NotAt2Locs_Rod_11hh  = Not(And(l0_11, l1_11))

Kp_Rod_11hh = And(Tactic('qe2').apply(Exists([x_11,hcool_11,hrest_11], And( hrest_11 >= 0, x_11 == hrest_11, hcool_11 == hrest_11))).as_expr(), Tactic('qe2').apply(Exists([x_11,hcool_11,hrest_11], And( x_11 >= hcool_11, hcool_11 >= 0, x_11 >= ct + hcool_11, x_11 == hrest_11))).as_expr())

ciRod_19hh = Or(And(l0_19,  hrest_19 >= 0,  x_19 == hrest_19,  hcool_19 == hrest_19), And(l1_19,  x_19 >= hcool_19,  hcool_19 >= 0,  x_19 >= ct + hcool_19,  x_19 == hrest_19), And(l0_19,  hcool_19 >= hrest_19,  hrest_19 >= 0,  x_19 == hrest_19))

NotAt2Locs_Rod_19hh  = Not(And(l0_19, l1_19))

Kp_Rod_19hh = And(Tactic('qe2').apply(Exists([x_19,hcool_19,hrest_19], And( hrest_19 >= 0, x_19 == hrest_19, hcool_19 == hrest_19))).as_expr(), Tactic('qe2').apply(Exists([x_19,hcool_19,hrest_19], And( x_19 >= hcool_19, hcool_19 >= 0, x_19 >= ct + hcool_19, x_19 == hrest_19))).as_expr())

ciRod_26hh = Or(And(l0_26,  hrest_26 >= 0,  x_26 == hrest_26,  hcool_26 == hrest_26), And(l1_26,  x_26 >= hcool_26,  hcool_26 >= 0,  x_26 >= ct + hcool_26,  x_26 == hrest_26), And(l0_26,  hcool_26 >= hrest_26,  hrest_26 >= 0,  x_26 == hrest_26))

NotAt2Locs_Rod_26hh  = Not(And(l0_26, l1_26))

Kp_Rod_26hh = And(Tactic('qe2').apply(Exists([x_26,hcool_26,hrest_26], And( hrest_26 >= 0, x_26 == hrest_26, hcool_26 == hrest_26))).as_expr(), Tactic('qe2').apply(Exists([x_26,hcool_26,hrest_26], And( x_26 >= hcool_26, hcool_26 >= 0, x_26 >= ct + hcool_26, x_26 == hrest_26))).as_expr())

cicontrollerhh = Or(And(lc0,  900 >= xc,  xc >= 0,  xc == hcoolc,  xc == hrestc), And(lc1,  450 >= xc,  xc >= 0,  xc == hcoolc,  xc + 900 == hrestc), And(lc0,  900 >= xc,  xc >= 0,  xc + 450 == hcoolc,  xc == hrestc))

NotAt2Locs_controllerhh  = Not(And(lc0, lc1))

Kp_controllerhh = And(Tactic('qe2').apply(Exists([xc,hcoolc,hrestc], And( 900 >= xc, xc >= 0, xc == hcoolc, xc == hrestc))).as_expr(), Tactic('qe2').apply(Exists([xc,hcoolc,hrestc], And( 450 >= xc, xc >= 0, xc == hcoolc, xc + 900 == hrestc))).as_expr())

ciRod_30hh = Or(And(l0_30,  hrest_30 >= 0,  x_30 == hrest_30,  hcool_30 == hrest_30), And(l1_30,  x_30 >= hcool_30,  hcool_30 >= 0,  x_30 >= ct + hcool_30,  x_30 == hrest_30), And(l0_30,  hcool_30 >= hrest_30,  hrest_30 >= 0,  x_30 == hrest_30))

NotAt2Locs_Rod_30hh  = Not(And(l0_30, l1_30))

Kp_Rod_30hh = And(Tactic('qe2').apply(Exists([x_30,hcool_30,hrest_30], And( hrest_30 >= 0, x_30 == hrest_30, hcool_30 == hrest_30))).as_expr(), Tactic('qe2').apply(Exists([x_30,hcool_30,hrest_30], And( x_30 >= hcool_30, hcool_30 >= 0, x_30 >= ct + hcool_30, x_30 == hrest_30))).as_expr())

ciRod_8hh = Or(And(l0_8,  hrest_8 >= 0,  x_8 == hrest_8,  hcool_8 == hrest_8), And(l1_8,  x_8 >= hcool_8,  hcool_8 >= 0,  x_8 >= ct + hcool_8,  x_8 == hrest_8), And(l0_8,  hcool_8 >= hrest_8,  hrest_8 >= 0,  x_8 == hrest_8))

NotAt2Locs_Rod_8hh  = Not(And(l0_8, l1_8))

Kp_Rod_8hh = And(Tactic('qe2').apply(Exists([x_8,hcool_8,hrest_8], And( hrest_8 >= 0, x_8 == hrest_8, hcool_8 == hrest_8))).as_expr(), Tactic('qe2').apply(Exists([x_8,hcool_8,hrest_8], And( x_8 >= hcool_8, hcool_8 >= 0, x_8 >= ct + hcool_8, x_8 == hrest_8))).as_expr())

ciRod_5hh = Or(And(l0_5,  hrest_5 >= 0,  x_5 == hrest_5,  hcool_5 == hrest_5), And(l1_5,  x_5 >= hcool_5,  hcool_5 >= 0,  x_5 >= ct + hcool_5,  x_5 == hrest_5), And(l0_5,  hcool_5 >= hrest_5,  hrest_5 >= 0,  x_5 == hrest_5))

NotAt2Locs_Rod_5hh  = Not(And(l0_5, l1_5))

Kp_Rod_5hh = And(Tactic('qe2').apply(Exists([x_5,hcool_5,hrest_5], And( hrest_5 >= 0, x_5 == hrest_5, hcool_5 == hrest_5))).as_expr(), Tactic('qe2').apply(Exists([x_5,hcool_5,hrest_5], And( x_5 >= hcool_5, hcool_5 >= 0, x_5 >= ct + hcool_5, x_5 == hrest_5))).as_expr())

ciRod_3hh = Or(And(l0_3,  hrest_3 >= 0,  x_3 == hrest_3,  hcool_3 == hrest_3), And(l1_3,  x_3 >= hcool_3,  hcool_3 >= 0,  x_3 >= ct + hcool_3,  x_3 == hrest_3), And(l0_3,  hcool_3 >= hrest_3,  hrest_3 >= 0,  x_3 == hrest_3))

NotAt2Locs_Rod_3hh  = Not(And(l0_3, l1_3))

Kp_Rod_3hh = And(Tactic('qe2').apply(Exists([x_3,hcool_3,hrest_3], And( hrest_3 >= 0, x_3 == hrest_3, hcool_3 == hrest_3))).as_expr(), Tactic('qe2').apply(Exists([x_3,hcool_3,hrest_3], And( x_3 >= hcool_3, hcool_3 >= 0, x_3 >= ct + hcool_3, x_3 == hrest_3))).as_expr())

ciRod_31hh = Or(And(l0_31,  hrest_31 >= 0,  x_31 == hrest_31,  hcool_31 == hrest_31), And(l1_31,  x_31 >= hcool_31,  hcool_31 >= 0,  x_31 >= ct + hcool_31,  x_31 == hrest_31), And(l0_31,  hcool_31 >= hrest_31,  hrest_31 >= 0,  x_31 == hrest_31))

NotAt2Locs_Rod_31hh  = Not(And(l0_31, l1_31))

Kp_Rod_31hh = And(Tactic('qe2').apply(Exists([x_31,hcool_31,hrest_31], And( hrest_31 >= 0, x_31 == hrest_31, hcool_31 == hrest_31))).as_expr(), Tactic('qe2').apply(Exists([x_31,hcool_31,hrest_31], And( x_31 >= hcool_31, hcool_31 >= 0, x_31 >= ct + hcool_31, x_31 == hrest_31))).as_expr())

ciRod_28hh = Or(And(l0_28,  hrest_28 >= 0,  x_28 == hrest_28,  hcool_28 == hrest_28), And(l1_28,  x_28 >= hcool_28,  hcool_28 >= 0,  x_28 >= ct + hcool_28,  x_28 == hrest_28), And(l0_28,  hcool_28 >= hrest_28,  hrest_28 >= 0,  x_28 == hrest_28))

NotAt2Locs_Rod_28hh  = Not(And(l0_28, l1_28))

Kp_Rod_28hh = And(Tactic('qe2').apply(Exists([x_28,hcool_28,hrest_28], And( hrest_28 >= 0, x_28 == hrest_28, hcool_28 == hrest_28))).as_expr(), Tactic('qe2').apply(Exists([x_28,hcool_28,hrest_28], And( x_28 >= hcool_28, hcool_28 >= 0, x_28 >= ct + hcool_28, x_28 == hrest_28))).as_expr())

ciRod_15hh = Or(And(l0_15,  hrest_15 >= 0,  x_15 == hrest_15,  hcool_15 == hrest_15), And(l1_15,  x_15 >= hcool_15,  hcool_15 >= 0,  x_15 >= ct + hcool_15,  x_15 == hrest_15), And(l0_15,  hcool_15 >= hrest_15,  hrest_15 >= 0,  x_15 == hrest_15))

NotAt2Locs_Rod_15hh  = Not(And(l0_15, l1_15))

Kp_Rod_15hh = And(Tactic('qe2').apply(Exists([x_15,hcool_15,hrest_15], And( hrest_15 >= 0, x_15 == hrest_15, hcool_15 == hrest_15))).as_expr(), Tactic('qe2').apply(Exists([x_15,hcool_15,hrest_15], And( x_15 >= hcool_15, hcool_15 >= 0, x_15 >= ct + hcool_15, x_15 == hrest_15))).as_expr())

ciRod_14hh = Or(And(l0_14,  hrest_14 >= 0,  x_14 == hrest_14,  hcool_14 == hrest_14), And(l1_14,  x_14 >= hcool_14,  hcool_14 >= 0,  x_14 >= ct + hcool_14,  x_14 == hrest_14), And(l0_14,  hcool_14 >= hrest_14,  hrest_14 >= 0,  x_14 == hrest_14))

NotAt2Locs_Rod_14hh  = Not(And(l0_14, l1_14))

Kp_Rod_14hh = And(Tactic('qe2').apply(Exists([x_14,hcool_14,hrest_14], And( hrest_14 >= 0, x_14 == hrest_14, hcool_14 == hrest_14))).as_expr(), Tactic('qe2').apply(Exists([x_14,hcool_14,hrest_14], And( x_14 >= hcool_14, hcool_14 >= 0, x_14 >= ct + hcool_14, x_14 == hrest_14))).as_expr())

ciRod_0hh = Or(And(l0_0,  hrest_0 >= 0,  x_0 == hrest_0,  hcool_0 == hrest_0), And(l1_0,  x_0 >= hcool_0,  hcool_0 >= 0,  x_0 >= ct + hcool_0,  x_0 == hrest_0), And(l0_0,  hcool_0 >= hrest_0,  hrest_0 >= 0,  x_0 == hrest_0))

NotAt2Locs_Rod_0hh  = Not(And(l0_0, l1_0))

Kp_Rod_0hh = And(Tactic('qe2').apply(Exists([x_0,hcool_0,hrest_0], And( hrest_0 >= 0, x_0 == hrest_0, hcool_0 == hrest_0))).as_expr(), Tactic('qe2').apply(Exists([x_0,hcool_0,hrest_0], And( x_0 >= hcool_0, hcool_0 >= 0, x_0 >= ct + hcool_0, x_0 == hrest_0))).as_expr())

ciRod_18hh = Or(And(l0_18,  hrest_18 >= 0,  x_18 == hrest_18,  hcool_18 == hrest_18), And(l1_18,  x_18 >= hcool_18,  hcool_18 >= 0,  x_18 >= ct + hcool_18,  x_18 == hrest_18), And(l0_18,  hcool_18 >= hrest_18,  hrest_18 >= 0,  x_18 == hrest_18))

NotAt2Locs_Rod_18hh  = Not(And(l0_18, l1_18))

Kp_Rod_18hh = And(Tactic('qe2').apply(Exists([x_18,hcool_18,hrest_18], And( hrest_18 >= 0, x_18 == hrest_18, hcool_18 == hrest_18))).as_expr(), Tactic('qe2').apply(Exists([x_18,hcool_18,hrest_18], And( x_18 >= hcool_18, hcool_18 >= 0, x_18 >= ct + hcool_18, x_18 == hrest_18))).as_expr())

ciRod_29hh = Or(And(l0_29,  hrest_29 >= 0,  x_29 == hrest_29,  hcool_29 == hrest_29), And(l1_29,  x_29 >= hcool_29,  hcool_29 >= 0,  x_29 >= ct + hcool_29,  x_29 == hrest_29), And(l0_29,  hcool_29 >= hrest_29,  hrest_29 >= 0,  x_29 == hrest_29))

NotAt2Locs_Rod_29hh  = Not(And(l0_29, l1_29))

Kp_Rod_29hh = And(Tactic('qe2').apply(Exists([x_29,hcool_29,hrest_29], And( hrest_29 >= 0, x_29 == hrest_29, hcool_29 == hrest_29))).as_expr(), Tactic('qe2').apply(Exists([x_29,hcool_29,hrest_29], And( x_29 >= hcool_29, hcool_29 >= 0, x_29 >= ct + hcool_29, x_29 == hrest_29))).as_expr())

ciRod_25hh = Or(And(l0_25,  hrest_25 >= 0,  x_25 == hrest_25,  hcool_25 == hrest_25), And(l1_25,  x_25 >= hcool_25,  hcool_25 >= 0,  x_25 >= ct + hcool_25,  x_25 == hrest_25), And(l0_25,  hcool_25 >= hrest_25,  hrest_25 >= 0,  x_25 == hrest_25))

NotAt2Locs_Rod_25hh  = Not(And(l0_25, l1_25))

Kp_Rod_25hh = And(Tactic('qe2').apply(Exists([x_25,hcool_25,hrest_25], And( hrest_25 >= 0, x_25 == hrest_25, hcool_25 == hrest_25))).as_expr(), Tactic('qe2').apply(Exists([x_25,hcool_25,hrest_25], And( x_25 >= hcool_25, hcool_25 >= 0, x_25 >= ct + hcool_25, x_25 == hrest_25))).as_expr())

ciRod_17hh = Or(And(l0_17,  hrest_17 >= 0,  x_17 == hrest_17,  hcool_17 == hrest_17), And(l1_17,  x_17 >= hcool_17,  hcool_17 >= 0,  x_17 >= ct + hcool_17,  x_17 == hrest_17), And(l0_17,  hcool_17 >= hrest_17,  hrest_17 >= 0,  x_17 == hrest_17))

NotAt2Locs_Rod_17hh  = Not(And(l0_17, l1_17))

Kp_Rod_17hh = And(Tactic('qe2').apply(Exists([x_17,hcool_17,hrest_17], And( hrest_17 >= 0, x_17 == hrest_17, hcool_17 == hrest_17))).as_expr(), Tactic('qe2').apply(Exists([x_17,hcool_17,hrest_17], And( x_17 >= hcool_17, hcool_17 >= 0, x_17 >= ct + hcool_17, x_17 == hrest_17))).as_expr())

ciRod_21hh = Or(And(l0_21,  hrest_21 >= 0,  x_21 == hrest_21,  hcool_21 == hrest_21), And(l1_21,  x_21 >= hcool_21,  hcool_21 >= 0,  x_21 >= ct + hcool_21,  x_21 == hrest_21), And(l0_21,  hcool_21 >= hrest_21,  hrest_21 >= 0,  x_21 == hrest_21))

NotAt2Locs_Rod_21hh  = Not(And(l0_21, l1_21))

Kp_Rod_21hh = And(Tactic('qe2').apply(Exists([x_21,hcool_21,hrest_21], And( hrest_21 >= 0, x_21 == hrest_21, hcool_21 == hrest_21))).as_expr(), Tactic('qe2').apply(Exists([x_21,hcool_21,hrest_21], And( x_21 >= hcool_21, hcool_21 >= 0, x_21 >= ct + hcool_21, x_21 == hrest_21))).as_expr())

ciRod_13hh = Or(And(l0_13,  hrest_13 >= 0,  x_13 == hrest_13,  hcool_13 == hrest_13), And(l1_13,  x_13 >= hcool_13,  hcool_13 >= 0,  x_13 >= ct + hcool_13,  x_13 == hrest_13), And(l0_13,  hcool_13 >= hrest_13,  hrest_13 >= 0,  x_13 == hrest_13))

NotAt2Locs_Rod_13hh  = Not(And(l0_13, l1_13))

Kp_Rod_13hh = And(Tactic('qe2').apply(Exists([x_13,hcool_13,hrest_13], And( hrest_13 >= 0, x_13 == hrest_13, hcool_13 == hrest_13))).as_expr(), Tactic('qe2').apply(Exists([x_13,hcool_13,hrest_13], And( x_13 >= hcool_13, hcool_13 >= 0, x_13 >= ct + hcool_13, x_13 == hrest_13))).as_expr())

ciRod_6hh = Or(And(l0_6,  hrest_6 >= 0,  x_6 == hrest_6,  hcool_6 == hrest_6), And(l1_6,  x_6 >= hcool_6,  hcool_6 >= 0,  x_6 >= ct + hcool_6,  x_6 == hrest_6), And(l0_6,  hcool_6 >= hrest_6,  hrest_6 >= 0,  x_6 == hrest_6))

NotAt2Locs_Rod_6hh  = Not(And(l0_6, l1_6))

Kp_Rod_6hh = And(Tactic('qe2').apply(Exists([x_6,hcool_6,hrest_6], And( hrest_6 >= 0, x_6 == hrest_6, hcool_6 == hrest_6))).as_expr(), Tactic('qe2').apply(Exists([x_6,hcool_6,hrest_6], And( x_6 >= hcool_6, hcool_6 >= 0, x_6 >= ct + hcool_6, x_6 == hrest_6))).as_expr())

ciRod_1hh = Or(And(l0_1,  hrest_1 >= 0,  x_1 == hrest_1,  hcool_1 == hrest_1), And(l1_1,  x_1 >= hcool_1,  hcool_1 >= 0,  x_1 >= ct + hcool_1,  x_1 == hrest_1), And(l0_1,  hcool_1 >= hrest_1,  hrest_1 >= 0,  x_1 == hrest_1))

NotAt2Locs_Rod_1hh  = Not(And(l0_1, l1_1))

Kp_Rod_1hh = And(Tactic('qe2').apply(Exists([x_1,hcool_1,hrest_1], And( hrest_1 >= 0, x_1 == hrest_1, hcool_1 == hrest_1))).as_expr(), Tactic('qe2').apply(Exists([x_1,hcool_1,hrest_1], And( x_1 >= hcool_1, hcool_1 >= 0, x_1 >= ct + hcool_1, x_1 == hrest_1))).as_expr())

ciRod_7hh = Or(And(l0_7,  hrest_7 >= 0,  x_7 == hrest_7,  hcool_7 == hrest_7), And(l1_7,  x_7 >= hcool_7,  hcool_7 >= 0,  x_7 >= ct + hcool_7,  x_7 == hrest_7), And(l0_7,  hcool_7 >= hrest_7,  hrest_7 >= 0,  x_7 == hrest_7))

NotAt2Locs_Rod_7hh  = Not(And(l0_7, l1_7))

Kp_Rod_7hh = And(Tactic('qe2').apply(Exists([x_7,hcool_7,hrest_7], And( hrest_7 >= 0, x_7 == hrest_7, hcool_7 == hrest_7))).as_expr(), Tactic('qe2').apply(Exists([x_7,hcool_7,hrest_7], And( x_7 >= hcool_7, hcool_7 >= 0, x_7 >= ct + hcool_7, x_7 == hrest_7))).as_expr())

ciRod_2hh = Or(And(l0_2,  hrest_2 >= 0,  x_2 == hrest_2,  hcool_2 == hrest_2), And(l1_2,  x_2 >= hcool_2,  hcool_2 >= 0,  x_2 >= ct + hcool_2,  x_2 == hrest_2), And(l0_2,  hcool_2 >= hrest_2,  hrest_2 >= 0,  x_2 == hrest_2))

NotAt2Locs_Rod_2hh  = Not(And(l0_2, l1_2))

Kp_Rod_2hh = And(Tactic('qe2').apply(Exists([x_2,hcool_2,hrest_2], And( hrest_2 >= 0, x_2 == hrest_2, hcool_2 == hrest_2))).as_expr(), Tactic('qe2').apply(Exists([x_2,hcool_2,hrest_2], And( x_2 >= hcool_2, hcool_2 >= 0, x_2 >= ct + hcool_2, x_2 == hrest_2))).as_expr())

ciRod_12hh = Or(And(l0_12,  hrest_12 >= 0,  x_12 == hrest_12,  hcool_12 == hrest_12), And(l1_12,  x_12 >= hcool_12,  hcool_12 >= 0,  x_12 >= ct + hcool_12,  x_12 == hrest_12), And(l0_12,  hcool_12 >= hrest_12,  hrest_12 >= 0,  x_12 == hrest_12))

NotAt2Locs_Rod_12hh  = Not(And(l0_12, l1_12))

Kp_Rod_12hh = And(Tactic('qe2').apply(Exists([x_12,hcool_12,hrest_12], And( hrest_12 >= 0, x_12 == hrest_12, hcool_12 == hrest_12))).as_expr(), Tactic('qe2').apply(Exists([x_12,hcool_12,hrest_12], And( x_12 >= hcool_12, hcool_12 >= 0, x_12 >= ct + hcool_12, x_12 == hrest_12))).as_expr())

ciRod_24hh = Or(And(l0_24,  hrest_24 >= 0,  x_24 == hrest_24,  hcool_24 == hrest_24), And(l1_24,  x_24 >= hcool_24,  hcool_24 >= 0,  x_24 >= ct + hcool_24,  x_24 == hrest_24), And(l0_24,  hcool_24 >= hrest_24,  hrest_24 >= 0,  x_24 == hrest_24))

NotAt2Locs_Rod_24hh  = Not(And(l0_24, l1_24))

Kp_Rod_24hh = And(Tactic('qe2').apply(Exists([x_24,hcool_24,hrest_24], And( hrest_24 >= 0, x_24 == hrest_24, hcool_24 == hrest_24))).as_expr(), Tactic('qe2').apply(Exists([x_24,hcool_24,hrest_24], And( x_24 >= hcool_24, hcool_24 >= 0, x_24 >= ct + hcool_24, x_24 == hrest_24))).as_expr())


#abstract reach
absReachII = Or(And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc1, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l1_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24)) 

#Enabled guided by absReach
En = Or(And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_24 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_9 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_4 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_19 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_5 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_13 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_8 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_7 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_12 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_30 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_29 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_18 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_10 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_2 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_17 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_22 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_15 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc1, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l1_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -450), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_3 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_28 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_6 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_26 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_31 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_20 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_23 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_27 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_14 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_0 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_11 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, -ct + x_21 >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_1 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_16 - ct >= 0), And(l0_16, l0_9, l0_32, l0_10, l0_4, l0_23, l0_22, l0_27, l0_20, l0_11, l0_19, l0_26, lc0, l0_30, l0_8, l0_5, l0_3, l0_31, l0_28, l0_15, l0_14, l0_0, l0_18, l0_29, l0_25, l0_17, l0_21, l0_13, l0_6, l0_1, l0_7, l0_2, l0_12, l0_24, -xc >= -900, x_25 - ct >= 0))

DisN = Not(En)

NewCond = True
NotAt2Locs_all = And(NotAt2Locs_Rod_16hh, NotAt2Locs_Rod_9hh, NotAt2Locs_Rod_32hh, NotAt2Locs_Rod_10hh, NotAt2Locs_Rod_4hh, NotAt2Locs_Rod_23hh, NotAt2Locs_Rod_22hh, NotAt2Locs_Rod_27hh, NotAt2Locs_Rod_20hh, NotAt2Locs_Rod_11hh, NotAt2Locs_Rod_19hh, NotAt2Locs_Rod_26hh, NotAt2Locs_controllerhh, NotAt2Locs_Rod_30hh, NotAt2Locs_Rod_8hh, NotAt2Locs_Rod_5hh, NotAt2Locs_Rod_3hh, NotAt2Locs_Rod_31hh, NotAt2Locs_Rod_28hh, NotAt2Locs_Rod_15hh, NotAt2Locs_Rod_14hh, NotAt2Locs_Rod_0hh, NotAt2Locs_Rod_18hh, NotAt2Locs_Rod_29hh, NotAt2Locs_Rod_25hh, NotAt2Locs_Rod_17hh, NotAt2Locs_Rod_21hh, NotAt2Locs_Rod_13hh, NotAt2Locs_Rod_6hh, NotAt2Locs_Rod_1hh, NotAt2Locs_Rod_7hh, NotAt2Locs_Rod_2hh, NotAt2Locs_Rod_12hh, NotAt2Locs_Rod_24hh)
PosClks = And(x_16 >= 0, hcool_16 >= 0, ct >= 0, hrest_16 >= 0, ct >= 0, hrest_9 >= 0, hcool_9 >= 0, x_9 >= 0, x_32 >= 0, hrest_32 >= 0, hcool_32 >= 0, ct >= 0, ct >= 0, x_10 >= 0, hcool_10 >= 0, hrest_10 >= 0, x_4 >= 0, ct >= 0, hrest_4 >= 0, hcool_4 >= 0, hcool_23 >= 0, x_23 >= 0, ct >= 0, hrest_23 >= 0, ct >= 0, hrest_22 >= 0, hcool_22 >= 0, x_22 >= 0, hrest_27 >= 0, hcool_27 >= 0, ct >= 0, x_27 >= 0, hcool_20 >= 0, ct >= 0, x_20 >= 0, hrest_20 >= 0, x_11 >= 0, ct >= 0, hrest_11 >= 0, hcool_11 >= 0, hrest_19 >= 0, x_19 >= 0, hcool_19 >= 0, ct >= 0, x_26 >= 0, hcool_26 >= 0, ct >= 0, hrest_26 >= 0, p >= 0, hcoolc >= 0, hrestc >= 0, xc >= 0, x_30 >= 0, hcool_30 >= 0, ct >= 0, hrest_30 >= 0, hrest_8 >= 0, ct >= 0, x_8 >= 0, hcool_8 >= 0, hcool_5 >= 0, ct >= 0, hrest_5 >= 0, x_5 >= 0, ct >= 0, hcool_3 >= 0, hrest_3 >= 0, x_3 >= 0, hcool_31 >= 0, hrest_31 >= 0, x_31 >= 0, ct >= 0, hcool_28 >= 0, hrest_28 >= 0, ct >= 0, x_28 >= 0, hrest_15 >= 0, x_15 >= 0, hcool_15 >= 0, ct >= 0, hcool_14 >= 0, x_14 >= 0, ct >= 0, hrest_14 >= 0, hrest_0 >= 0, hcool_0 >= 0, x_0 >= 0, ct >= 0, hcool_18 >= 0, hrest_18 >= 0, x_18 >= 0, ct >= 0, hrest_29 >= 0, x_29 >= 0, hcool_29 >= 0, ct >= 0, hcool_25 >= 0, x_25 >= 0, hrest_25 >= 0, ct >= 0, hrest_17 >= 0, hcool_17 >= 0, x_17 >= 0, ct >= 0, hrest_21 >= 0, x_21 >= 0, hcool_21 >= 0, ct >= 0, hcool_13 >= 0, x_13 >= 0, hrest_13 >= 0, ct >= 0, x_6 >= 0, hcool_6 >= 0, ct >= 0, hrest_6 >= 0, ct >= 0, hcool_1 >= 0, x_1 >= 0, hrest_1 >= 0, ct >= 0, hrest_7 >= 0, hcool_7 >= 0, x_7 >= 0, hcool_2 >= 0, hrest_2 >= 0, x_2 >= 0, ct >= 0, ct >= 0, x_12 >= 0, hcool_12 >= 0, hrest_12 >= 0, hcool_24 >= 0, hrest_24 >= 0, x_24 >= 0, ct >= 0)
Kp_all = And(Kp_Rod_16hh, Kp_Rod_9hh, Kp_Rod_32hh, Kp_Rod_10hh, Kp_Rod_4hh, Kp_Rod_23hh, Kp_Rod_22hh, Kp_Rod_27hh, Kp_Rod_20hh, Kp_Rod_11hh, Kp_Rod_19hh, Kp_Rod_26hh, Kp_controllerhh, Kp_Rod_30hh, Kp_Rod_8hh, Kp_Rod_5hh, Kp_Rod_3hh, Kp_Rod_31hh, Kp_Rod_28hh, Kp_Rod_15hh, Kp_Rod_14hh, Kp_Rod_0hh, Kp_Rod_18hh, Kp_Rod_29hh, Kp_Rod_25hh, Kp_Rod_17hh, Kp_Rod_21hh, Kp_Rod_13hh, Kp_Rod_6hh, Kp_Rod_1hh, Kp_Rod_7hh, Kp_Rod_2hh, Kp_Rod_12hh, Kp_Rod_24hh)
AddInvs = And(absReachII, NewCond, PosClks, NotAt2Locs_all)
Gi = And(ciRod_16hh, ciRod_9hh, ciRod_32hh, ciRod_10hh, ciRod_4hh, ciRod_23hh, ciRod_22hh, ciRod_27hh, ciRod_20hh, ciRod_11hh, ciRod_19hh, ciRod_26hh, cicontrollerhh, ciRod_30hh, ciRod_8hh, ciRod_5hh, ciRod_3hh, ciRod_31hh, ciRod_28hh, ciRod_15hh, ciRod_14hh, ciRod_0hh, ciRod_18hh, ciRod_29hh, ciRod_25hh, ciRod_17hh, ciRod_21hh, ciRod_13hh, ciRod_6hh, ciRod_1hh, ciRod_7hh, ciRod_2hh, ciRod_12hh, ciRod_24hh, AddInvs)

hcoolccool_13, hcoolccool_17, hcoolccool_5, hcoolccool_8, hcoolccool_10, hcoolccool_26, hcoolccool_16, hcoolccool_11, hcoolccool_4, hcoolccool_20, hcoolccool_25, hcoolccool_23, hcoolccool_12, hcoolccool_2, hcoolccool_19, hcoolccool_27, hcoolccool_30, hcoolccool_3, hcoolccool_6, hcoolccool_29, hcoolccool_21, hcoolccool_0, hcoolccool_31, hcoolccool_22, hcoolccool_14, hcoolccool_9, hrestcrest_0, hcoolccool_18, hcoolccool_28, hcoolccool_24, hcoolccool_15, hcoolccool_1, hcoolccool_7 = Ints('hcoolccool_13 hcoolccool_17 hcoolccool_5 hcoolccool_8 hcoolccool_10 hcoolccool_26 hcoolccool_16 hcoolccool_11 hcoolccool_4 hcoolccool_20 hcoolccool_25 hcoolccool_23 hcoolccool_12 hcoolccool_2 hcoolccool_19 hcoolccool_27 hcoolccool_30 hcoolccool_3 hcoolccool_6 hcoolccool_29 hcoolccool_21 hcoolccool_0 hcoolccool_31 hcoolccool_22 hcoolccool_14 hcoolccool_9 hrestcrest_0 hcoolccool_18 hcoolccool_28 hcoolccool_24 hcoolccool_15 hcoolccool_1 hcoolccool_7')
PosHClks = And(hcoolccool_13 >= 0, hcoolccool_17 >= 0, hcoolccool_5 >= 0, hcoolccool_8 >= 0, hcoolccool_10 >= 0, hcoolccool_26 >= 0, hcoolccool_16 >= 0, hcoolccool_11 >= 0, hcoolccool_4 >= 0, hcoolccool_20 >= 0, hcoolccool_25 >= 0, hcoolccool_23 >= 0, hcoolccool_12 >= 0, hcoolccool_2 >= 0, hcoolccool_19 >= 0, hcoolccool_27 >= 0, hcoolccool_30 >= 0, hcoolccool_3 >= 0, hcoolccool_6 >= 0, hcoolccool_29 >= 0, hcoolccool_21 >= 0, hcoolccool_0 >= 0, hcoolccool_31 >= 0, hcoolccool_22 >= 0, hcoolccool_14 >= 0, hcoolccool_9 >= 0, hrestcrest_0 >= 0, hcoolccool_18 >= 0, hcoolccool_28 >= 0, hcoolccool_24 >= 0, hcoolccool_15 >= 0, hcoolccool_1 >= 0, hcoolccool_7 >= 0)
EqsS = And(hrestc == hrest_0, Or(And(hcoolc == hcool_13, And(hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_17, And(hcoolc <= hcool_13, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_5, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_8, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_10, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_26, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_16, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_11, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_4, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_20, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_25, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_23, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_12, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_2, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_19, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_27, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_30, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_3, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_6, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_29, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_21, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_0, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_31, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_22, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_14, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_9, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_18, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_28, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_24, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_15, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_15, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_1, hcoolc <= hcool_7)), And(hcoolc == hcool_1, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_7)), And(hcoolc == hcool_7, And(hcoolc <= hcool_13, hcoolc <= hcool_17, hcoolc <= hcool_5, hcoolc <= hcool_8, hcoolc <= hcool_10, hcoolc <= hcool_26, hcoolc <= hcool_16, hcoolc <= hcool_11, hcoolc <= hcool_4, hcoolc <= hcool_20, hcoolc <= hcool_25, hcoolc <= hcool_23, hcoolc <= hcool_12, hcoolc <= hcool_2, hcoolc <= hcool_19, hcoolc <= hcool_27, hcoolc <= hcool_30, hcoolc <= hcool_3, hcoolc <= hcool_6, hcoolc <= hcool_29, hcoolc <= hcool_21, hcoolc <= hcool_0, hcoolc <= hcool_31, hcoolc <= hcool_22, hcoolc <= hcool_14, hcoolc <= hcool_9, hcoolc <= hcool_18, hcoolc <= hcool_28, hcoolc <= hcool_24, hcoolc <= hcool_15, hcoolc <= hcool_1))))
Gih = And(ciRod_16hh, ciRod_9hh, ciRod_32hh, ciRod_10hh, ciRod_4hh, ciRod_23hh, ciRod_22hh, ciRod_27hh, ciRod_20hh, ciRod_11hh, ciRod_19hh, ciRod_26hh, cicontrollerhh, ciRod_30hh, ciRod_8hh, ciRod_5hh, ciRod_3hh, ciRod_31hh, ciRod_28hh, ciRod_15hh, ciRod_14hh, ciRod_0hh, ciRod_18hh, ciRod_29hh, ciRod_25hh, ciRod_17hh, ciRod_21hh, ciRod_13hh, ciRod_6hh, ciRod_1hh, ciRod_7hh, ciRod_2hh, ciRod_12hh, ciRod_24hh, EqsS, AddInvs, PosHClks )
dead = And(Gih, DisN)
EqsC = And(Or(And(hcoolc == hcoolccool_12, And(hcoolccool_12 <= hcoolccool_3, hcoolccool_12 <= hcoolccool_2, hcoolccool_12 <= hcoolccool_16, hcoolccool_12 <= hcoolccool_27, hcoolccool_12 <= hcoolccool_21, hcoolccool_12 <= hcoolccool_9, hcoolccool_12 <= hcoolccool_10, hcoolccool_12 <= hcoolccool_14, hcoolccool_12 <= hcoolccool_19, hcoolccool_12 <= hcoolccool_1, hcoolccool_12 <= hcoolccool_0, hcoolccool_12 <= hcoolccool_22, hcoolccool_12 <= hcoolccool_24, hcoolccool_12 <= hcoolccool_11, hcoolccool_12 <= hcoolccool_13, hcoolccool_12 <= hcoolccool_6, hcoolccool_12 <= hcoolccool_30, hcoolccool_12 <= hcoolccool_18, hcoolccool_12 <= hcoolccool_20, hcoolccool_12 <= hcoolccool_8, hcoolccool_12 <= hcoolccool_29, hcoolccool_12 <= hcoolccool_23, hcoolccool_12 <= hcoolccool_5, hcoolccool_12 <= hcoolccool_4, hcoolccool_12 <= hcoolccool_25, hcoolccool_12 <= hcoolccool_31, hcoolccool_12 <= hcoolccool_28, hcoolccool_12 <= hcoolccool_7, hcoolccool_12 <= hcoolccool_17, hcoolccool_12 <= hcoolccool_15, hcoolccool_12 <= hcoolccool_26)), And(hcoolc == hcoolccool_28, And(hcoolccool_28 <= hcoolccool_15, hcoolccool_28 <= hcoolccool_18, hcoolccool_28 <= hcoolccool_6, hcoolccool_28 <= hcoolccool_27, hcoolccool_28 <= hcoolccool_21, hcoolccool_28 <= hcoolccool_10, hcoolccool_28 <= hcoolccool_16, hcoolccool_28 <= hcoolccool_9, hcoolccool_28 <= hcoolccool_2, hcoolccool_28 <= hcoolccool_5, hcoolccool_28 <= hcoolccool_3, hcoolccool_28 <= hcoolccool_20, hcoolccool_28 <= hcoolccool_0, hcoolccool_28 <= hcoolccool_29, hcoolccool_28 <= hcoolccool_17, hcoolccool_28 <= hcoolccool_26, hcoolccool_28 <= hcoolccool_31, hcoolccool_28 <= hcoolccool_11, hcoolccool_28 <= hcoolccool_8, hcoolccool_28 <= hcoolccool_12, hcoolccool_28 <= hcoolccool_24, hcoolccool_28 <= hcoolccool_13, hcoolccool_28 <= hcoolccool_4, hcoolccool_28 <= hcoolccool_25, hcoolccool_28 <= hcoolccool_1, hcoolccool_28 <= hcoolccool_30, hcoolccool_28 <= hcoolccool_14, hcoolccool_28 <= hcoolccool_22, hcoolccool_28 <= hcoolccool_23, hcoolccool_28 <= hcoolccool_19, hcoolccool_28 <= hcoolccool_7)), And(hcoolc == hcoolccool_14, And(hcoolccool_14 <= hcoolccool_22, hcoolccool_14 <= hcoolccool_16, hcoolccool_14 <= hcoolccool_2, hcoolccool_14 <= hcoolccool_27, hcoolccool_14 <= hcoolccool_11, hcoolccool_14 <= hcoolccool_28, hcoolccool_14 <= hcoolccool_6, hcoolccool_14 <= hcoolccool_9, hcoolccool_14 <= hcoolccool_17, hcoolccool_14 <= hcoolccool_21, hcoolccool_14 <= hcoolccool_10, hcoolccool_14 <= hcoolccool_29, hcoolccool_14 <= hcoolccool_1, hcoolccool_14 <= hcoolccool_5, hcoolccool_14 <= hcoolccool_4, hcoolccool_14 <= hcoolccool_31, hcoolccool_14 <= hcoolccool_25, hcoolccool_14 <= hcoolccool_0, hcoolccool_14 <= hcoolccool_7, hcoolccool_14 <= hcoolccool_24, hcoolccool_14 <= hcoolccool_18, hcoolccool_14 <= hcoolccool_13, hcoolccool_14 <= hcoolccool_20, hcoolccool_14 <= hcoolccool_26, hcoolccool_14 <= hcoolccool_15, hcoolccool_14 <= hcoolccool_23, hcoolccool_14 <= hcoolccool_3, hcoolccool_14 <= hcoolccool_30, hcoolccool_14 <= hcoolccool_8, hcoolccool_14 <= hcoolccool_12, hcoolccool_14 <= hcoolccool_19)), And(hcoolc == hcoolccool_1, And(hcoolccool_1 <= hcoolccool_2, hcoolccool_1 <= hcoolccool_27, hcoolccool_1 <= hcoolccool_16, hcoolccool_1 <= hcoolccool_22, hcoolccool_1 <= hcoolccool_15, hcoolccool_1 <= hcoolccool_11, hcoolccool_1 <= hcoolccool_6, hcoolccool_1 <= hcoolccool_23, hcoolccool_1 <= hcoolccool_12, hcoolccool_1 <= hcoolccool_3, hcoolccool_1 <= hcoolccool_30, hcoolccool_1 <= hcoolccool_18, hcoolccool_1 <= hcoolccool_29, hcoolccool_1 <= hcoolccool_26, hcoolccool_1 <= hcoolccool_4, hcoolccool_1 <= hcoolccool_20, hcoolccool_1 <= hcoolccool_7, hcoolccool_1 <= hcoolccool_31, hcoolccool_1 <= hcoolccool_19, hcoolccool_1 <= hcoolccool_14, hcoolccool_1 <= hcoolccool_28, hcoolccool_1 <= hcoolccool_17, hcoolccool_1 <= hcoolccool_25, hcoolccool_1 <= hcoolccool_10, hcoolccool_1 <= hcoolccool_21, hcoolccool_1 <= hcoolccool_8, hcoolccool_1 <= hcoolccool_24, hcoolccool_1 <= hcoolccool_13, hcoolccool_1 <= hcoolccool_9, hcoolccool_1 <= hcoolccool_0, hcoolccool_1 <= hcoolccool_5)), And(hcoolc == hcoolccool_16, And(hcoolccool_16 <= hcoolccool_11, hcoolccool_16 <= hcoolccool_22, hcoolccool_16 <= hcoolccool_15, hcoolccool_16 <= hcoolccool_0, hcoolccool_16 <= hcoolccool_26, hcoolccool_16 <= hcoolccool_8, hcoolccool_16 <= hcoolccool_21, hcoolccool_16 <= hcoolccool_10, hcoolccool_16 <= hcoolccool_4, hcoolccool_16 <= hcoolccool_25, hcoolccool_16 <= hcoolccool_2, hcoolccool_16 <= hcoolccool_14, hcoolccool_16 <= hcoolccool_27, hcoolccool_16 <= hcoolccool_5, hcoolccool_16 <= hcoolccool_17, hcoolccool_16 <= hcoolccool_9, hcoolccool_16 <= hcoolccool_13, hcoolccool_16 <= hcoolccool_3, hcoolccool_16 <= hcoolccool_1, hcoolccool_16 <= hcoolccool_28, hcoolccool_16 <= hcoolccool_24, hcoolccool_16 <= hcoolccool_6, hcoolccool_16 <= hcoolccool_20, hcoolccool_16 <= hcoolccool_18, hcoolccool_16 <= hcoolccool_31, hcoolccool_16 <= hcoolccool_12, hcoolccool_16 <= hcoolccool_29, hcoolccool_16 <= hcoolccool_23, hcoolccool_16 <= hcoolccool_19, hcoolccool_16 <= hcoolccool_30, hcoolccool_16 <= hcoolccool_7)), And(hcoolc == hcoolccool_30, And(hcoolccool_30 <= hcoolccool_2, hcoolccool_30 <= hcoolccool_14, hcoolccool_30 <= hcoolccool_8, hcoolccool_30 <= hcoolccool_19, hcoolccool_30 <= hcoolccool_25, hcoolccool_30 <= hcoolccool_29, hcoolccool_30 <= hcoolccool_7, hcoolccool_30 <= hcoolccool_3, hcoolccool_30 <= hcoolccool_15, hcoolccool_30 <= hcoolccool_26, hcoolccool_30 <= hcoolccool_11, hcoolccool_30 <= hcoolccool_22, hcoolccool_30 <= hcoolccool_18, hcoolccool_30 <= hcoolccool_20, hcoolccool_30 <= hcoolccool_23, hcoolccool_30 <= hcoolccool_6, hcoolccool_30 <= hcoolccool_12, hcoolccool_30 <= hcoolccool_31, hcoolccool_30 <= hcoolccool_28, hcoolccool_30 <= hcoolccool_0, hcoolccool_30 <= hcoolccool_17, hcoolccool_30 <= hcoolccool_21, hcoolccool_30 <= hcoolccool_24, hcoolccool_30 <= hcoolccool_13, hcoolccool_30 <= hcoolccool_1, hcoolccool_30 <= hcoolccool_10, hcoolccool_30 <= hcoolccool_27, hcoolccool_30 <= hcoolccool_4, hcoolccool_30 <= hcoolccool_16, hcoolccool_30 <= hcoolccool_5, hcoolccool_30 <= hcoolccool_9)), And(hcoolc == hcoolccool_11, And(hcoolccool_11 <= hcoolccool_15, hcoolccool_11 <= hcoolccool_2, hcoolccool_11 <= hcoolccool_6, hcoolccool_11 <= hcoolccool_26, hcoolccool_11 <= hcoolccool_31, hcoolccool_11 <= hcoolccool_29, hcoolccool_11 <= hcoolccool_1, hcoolccool_11 <= hcoolccool_20, hcoolccool_11 <= hcoolccool_7, hcoolccool_11 <= hcoolccool_16, hcoolccool_11 <= hcoolccool_27, hcoolccool_11 <= hcoolccool_22, hcoolccool_11 <= hcoolccool_19, hcoolccool_11 <= hcoolccool_30, hcoolccool_11 <= hcoolccool_3, hcoolccool_11 <= hcoolccool_0, hcoolccool_11 <= hcoolccool_28, hcoolccool_11 <= hcoolccool_17, hcoolccool_11 <= hcoolccool_12, hcoolccool_11 <= hcoolccool_8, hcoolccool_11 <= hcoolccool_23, hcoolccool_11 <= hcoolccool_4, hcoolccool_11 <= hcoolccool_13, hcoolccool_11 <= hcoolccool_24, hcoolccool_11 <= hcoolccool_18, hcoolccool_11 <= hcoolccool_10, hcoolccool_11 <= hcoolccool_9, hcoolccool_11 <= hcoolccool_21, hcoolccool_11 <= hcoolccool_5, hcoolccool_11 <= hcoolccool_25, hcoolccool_11 <= hcoolccool_14)), And(hcoolc == hcoolccool_22, And(hcoolccool_22 <= hcoolccool_12, hcoolccool_22 <= hcoolccool_23, hcoolccool_22 <= hcoolccool_3, hcoolccool_22 <= hcoolccool_18, hcoolccool_22 <= hcoolccool_8, hcoolccool_22 <= hcoolccool_1, hcoolccool_22 <= hcoolccool_11, hcoolccool_22 <= hcoolccool_20, hcoolccool_22 <= hcoolccool_27, hcoolccool_22 <= hcoolccool_9, hcoolccool_22 <= hcoolccool_17, hcoolccool_22 <= hcoolccool_26, hcoolccool_22 <= hcoolccool_15, hcoolccool_22 <= hcoolccool_21, hcoolccool_22 <= hcoolccool_4, hcoolccool_22 <= hcoolccool_28, hcoolccool_22 <= hcoolccool_10, hcoolccool_22 <= hcoolccool_25, hcoolccool_22 <= hcoolccool_0, hcoolccool_22 <= hcoolccool_14, hcoolccool_22 <= hcoolccool_31, hcoolccool_22 <= hcoolccool_6, hcoolccool_22 <= hcoolccool_19, hcoolccool_22 <= hcoolccool_5, hcoolccool_22 <= hcoolccool_16, hcoolccool_22 <= hcoolccool_29, hcoolccool_22 <= hcoolccool_13, hcoolccool_22 <= hcoolccool_2, hcoolccool_22 <= hcoolccool_24, hcoolccool_22 <= hcoolccool_7, hcoolccool_22 <= hcoolccool_30)), And(hcoolc == hcoolccool_15, And(hcoolccool_15 <= hcoolccool_6, hcoolccool_15 <= hcoolccool_20, hcoolccool_15 <= hcoolccool_25, hcoolccool_15 <= hcoolccool_2, hcoolccool_15 <= hcoolccool_14, hcoolccool_15 <= hcoolccool_5, hcoolccool_15 <= hcoolccool_28, hcoolccool_15 <= hcoolccool_21, hcoolccool_15 <= hcoolccool_10, hcoolccool_15 <= hcoolccool_17, hcoolccool_15 <= hcoolccool_9, hcoolccool_15 <= hcoolccool_11, hcoolccool_15 <= hcoolccool_22, hcoolccool_15 <= hcoolccool_27, hcoolccool_15 <= hcoolccool_31, hcoolccool_15 <= hcoolccool_16, hcoolccool_15 <= hcoolccool_3, hcoolccool_15 <= hcoolccool_8, hcoolccool_15 <= hcoolccool_12, hcoolccool_15 <= hcoolccool_26, hcoolccool_15 <= hcoolccool_23, hcoolccool_15 <= hcoolccool_19, hcoolccool_15 <= hcoolccool_4, hcoolccool_15 <= hcoolccool_30, hcoolccool_15 <= hcoolccool_24, hcoolccool_15 <= hcoolccool_29, hcoolccool_15 <= hcoolccool_1, hcoolccool_15 <= hcoolccool_13, hcoolccool_15 <= hcoolccool_7, hcoolccool_15 <= hcoolccool_18, hcoolccool_15 <= hcoolccool_0)), And(hcoolc == hcoolccool_3, And(hcoolccool_3 <= hcoolccool_7, hcoolccool_3 <= hcoolccool_30, hcoolccool_3 <= hcoolccool_4, hcoolccool_3 <= hcoolccool_23, hcoolccool_3 <= hcoolccool_12, hcoolccool_3 <= hcoolccool_15, hcoolccool_3 <= hcoolccool_0, hcoolccool_3 <= hcoolccool_27, hcoolccool_3 <= hcoolccool_19, hcoolccool_3 <= hcoolccool_16, hcoolccool_3 <= hcoolccool_11, hcoolccool_3 <= hcoolccool_1, hcoolccool_3 <= hcoolccool_22, hcoolccool_3 <= hcoolccool_28, hcoolccool_3 <= hcoolccool_5, hcoolccool_3 <= hcoolccool_17, hcoolccool_3 <= hcoolccool_9, hcoolccool_3 <= hcoolccool_18, hcoolccool_3 <= hcoolccool_2, hcoolccool_3 <= hcoolccool_29, hcoolccool_3 <= hcoolccool_6, hcoolccool_3 <= hcoolccool_10, hcoolccool_3 <= hcoolccool_21, hcoolccool_3 <= hcoolccool_13, hcoolccool_3 <= hcoolccool_31, hcoolccool_3 <= hcoolccool_20, hcoolccool_3 <= hcoolccool_8, hcoolccool_3 <= hcoolccool_24, hcoolccool_3 <= hcoolccool_25, hcoolccool_3 <= hcoolccool_14, hcoolccool_3 <= hcoolccool_26)), And(hcoolc == hcoolccool_9, And(hcoolccool_9 <= hcoolccool_8, hcoolccool_9 <= hcoolccool_0, hcoolccool_9 <= hcoolccool_3, hcoolccool_9 <= hcoolccool_14, hcoolccool_9 <= hcoolccool_25, hcoolccool_9 <= hcoolccool_20, hcoolccool_9 <= hcoolccool_2, hcoolccool_9 <= hcoolccool_7, hcoolccool_9 <= hcoolccool_15, hcoolccool_9 <= hcoolccool_26, hcoolccool_9 <= hcoolccool_18, hcoolccool_9 <= hcoolccool_29, hcoolccool_9 <= hcoolccool_1, hcoolccool_9 <= hcoolccool_11, hcoolccool_9 <= hcoolccool_16, hcoolccool_9 <= hcoolccool_22, hcoolccool_9 <= hcoolccool_6, hcoolccool_9 <= hcoolccool_12, hcoolccool_9 <= hcoolccool_19, hcoolccool_9 <= hcoolccool_23, hcoolccool_9 <= hcoolccool_30, hcoolccool_9 <= hcoolccool_31, hcoolccool_9 <= hcoolccool_4, hcoolccool_9 <= hcoolccool_28, hcoolccool_9 <= hcoolccool_5, hcoolccool_9 <= hcoolccool_17, hcoolccool_9 <= hcoolccool_10, hcoolccool_9 <= hcoolccool_21, hcoolccool_9 <= hcoolccool_24, hcoolccool_9 <= hcoolccool_27, hcoolccool_9 <= hcoolccool_13)), And(hcoolc == hcoolccool_5, And(hcoolccool_5 <= hcoolccool_9, hcoolccool_5 <= hcoolccool_25, hcoolccool_5 <= hcoolccool_14, hcoolccool_5 <= hcoolccool_10, hcoolccool_5 <= hcoolccool_21, hcoolccool_5 <= hcoolccool_17, hcoolccool_5 <= hcoolccool_1, hcoolccool_5 <= hcoolccool_28, hcoolccool_5 <= hcoolccool_20, hcoolccool_5 <= hcoolccool_31, hcoolccool_5 <= hcoolccool_0, hcoolccool_5 <= hcoolccool_13, hcoolccool_5 <= hcoolccool_24, hcoolccool_5 <= hcoolccool_6, hcoolccool_5 <= hcoolccool_23, hcoolccool_5 <= hcoolccool_18, hcoolccool_5 <= hcoolccool_29, hcoolccool_5 <= hcoolccool_4, hcoolccool_5 <= hcoolccool_30, hcoolccool_5 <= hcoolccool_7, hcoolccool_5 <= hcoolccool_22, hcoolccool_5 <= hcoolccool_12, hcoolccool_5 <= hcoolccool_3, hcoolccool_5 <= hcoolccool_26, hcoolccool_5 <= hcoolccool_19, hcoolccool_5 <= hcoolccool_8, hcoolccool_5 <= hcoolccool_15, hcoolccool_5 <= hcoolccool_11, hcoolccool_5 <= hcoolccool_27, hcoolccool_5 <= hcoolccool_2, hcoolccool_5 <= hcoolccool_16)), And(hcoolc == hcoolccool_21, And(hcoolccool_21 <= hcoolccool_29, hcoolccool_21 <= hcoolccool_16, hcoolccool_21 <= hcoolccool_27, hcoolccool_21 <= hcoolccool_5, hcoolccool_21 <= hcoolccool_18, hcoolccool_21 <= hcoolccool_8, hcoolccool_21 <= hcoolccool_12, hcoolccool_21 <= hcoolccool_2, hcoolccool_21 <= hcoolccool_23, hcoolccool_21 <= hcoolccool_28, hcoolccool_21 <= hcoolccool_4, hcoolccool_21 <= hcoolccool_13, hcoolccool_21 <= hcoolccool_17, hcoolccool_21 <= hcoolccool_24, hcoolccool_21 <= hcoolccool_14, hcoolccool_21 <= hcoolccool_25, hcoolccool_21 <= hcoolccool_3, hcoolccool_21 <= hcoolccool_20, hcoolccool_21 <= hcoolccool_7, hcoolccool_21 <= hcoolccool_31, hcoolccool_21 <= hcoolccool_6, hcoolccool_21 <= hcoolccool_10, hcoolccool_21 <= hcoolccool_0, hcoolccool_21 <= hcoolccool_9, hcoolccool_21 <= hcoolccool_15, hcoolccool_21 <= hcoolccool_26, hcoolccool_21 <= hcoolccool_19, hcoolccool_21 <= hcoolccool_30, hcoolccool_21 <= hcoolccool_1, hcoolccool_21 <= hcoolccool_22, hcoolccool_21 <= hcoolccool_11)), And(hcoolc == hcoolccool_13, And(hcoolccool_13 <= hcoolccool_21, hcoolccool_13 <= hcoolccool_4, hcoolccool_13 <= hcoolccool_27, hcoolccool_13 <= hcoolccool_10, hcoolccool_13 <= hcoolccool_16, hcoolccool_13 <= hcoolccool_31, hcoolccool_13 <= hcoolccool_20, hcoolccool_13 <= hcoolccool_17, hcoolccool_13 <= hcoolccool_24, hcoolccool_13 <= hcoolccool_5, hcoolccool_13 <= hcoolccool_28, hcoolccool_13 <= hcoolccool_1, hcoolccool_13 <= hcoolccool_8, hcoolccool_13 <= hcoolccool_6, hcoolccool_13 <= hcoolccool_9, hcoolccool_13 <= hcoolccool_23, hcoolccool_13 <= hcoolccool_25, hcoolccool_13 <= hcoolccool_29, hcoolccool_13 <= hcoolccool_18, hcoolccool_13 <= hcoolccool_30, hcoolccool_13 <= hcoolccool_14, hcoolccool_13 <= hcoolccool_12, hcoolccool_13 <= hcoolccool_2, hcoolccool_13 <= hcoolccool_26, hcoolccool_13 <= hcoolccool_7, hcoolccool_13 <= hcoolccool_22, hcoolccool_13 <= hcoolccool_0, hcoolccool_13 <= hcoolccool_11, hcoolccool_13 <= hcoolccool_19, hcoolccool_13 <= hcoolccool_3, hcoolccool_13 <= hcoolccool_15)), And(hcoolc == hcoolccool_0, And(hcoolccool_0 <= hcoolccool_13, hcoolccool_0 <= hcoolccool_1, hcoolccool_0 <= hcoolccool_10, hcoolccool_0 <= hcoolccool_28, hcoolccool_0 <= hcoolccool_23, hcoolccool_0 <= hcoolccool_6, hcoolccool_0 <= hcoolccool_2, hcoolccool_0 <= hcoolccool_20, hcoolccool_0 <= hcoolccool_7, hcoolccool_0 <= hcoolccool_31, hcoolccool_0 <= hcoolccool_17, hcoolccool_0 <= hcoolccool_24, hcoolccool_0 <= hcoolccool_14, hcoolccool_0 <= hcoolccool_5, hcoolccool_0 <= hcoolccool_29, hcoolccool_0 <= hcoolccool_19, hcoolccool_0 <= hcoolccool_30, hcoolccool_0 <= hcoolccool_18, hcoolccool_0 <= hcoolccool_26, hcoolccool_0 <= hcoolccool_25, hcoolccool_0 <= hcoolccool_11, hcoolccool_0 <= hcoolccool_4, hcoolccool_0 <= hcoolccool_15, hcoolccool_0 <= hcoolccool_9, hcoolccool_0 <= hcoolccool_3, hcoolccool_0 <= hcoolccool_27, hcoolccool_0 <= hcoolccool_22, hcoolccool_0 <= hcoolccool_12, hcoolccool_0 <= hcoolccool_8, hcoolccool_0 <= hcoolccool_16, hcoolccool_0 <= hcoolccool_21)), And(hcoolc == hcoolccool_6, And(hcoolccool_6 <= hcoolccool_14, hcoolccool_6 <= hcoolccool_2, hcoolccool_6 <= hcoolccool_4, hcoolccool_6 <= hcoolccool_25, hcoolccool_6 <= hcoolccool_18, hcoolccool_6 <= hcoolccool_29, hcoolccool_6 <= hcoolccool_13, hcoolccool_6 <= hcoolccool_31, hcoolccool_6 <= hcoolccool_20, hcoolccool_6 <= hcoolccool_30, hcoolccool_6 <= hcoolccool_8, hcoolccool_6 <= hcoolccool_17, hcoolccool_6 <= hcoolccool_28, hcoolccool_6 <= hcoolccool_7, hcoolccool_6 <= hcoolccool_10, hcoolccool_6 <= hcoolccool_21, hcoolccool_6 <= hcoolccool_0, hcoolccool_6 <= hcoolccool_11, hcoolccool_6 <= hcoolccool_26, hcoolccool_6 <= hcoolccool_15, hcoolccool_6 <= hcoolccool_22, hcoolccool_6 <= hcoolccool_5, hcoolccool_6 <= hcoolccool_24, hcoolccool_6 <= hcoolccool_3, hcoolccool_6 <= hcoolccool_1, hcoolccool_6 <= hcoolccool_19, hcoolccool_6 <= hcoolccool_27, hcoolccool_6 <= hcoolccool_12, hcoolccool_6 <= hcoolccool_23, hcoolccool_6 <= hcoolccool_16, hcoolccool_6 <= hcoolccool_9)), And(hcoolc == hcoolccool_17, And(hcoolccool_17 <= hcoolccool_1, hcoolccool_17 <= hcoolccool_12, hcoolccool_17 <= hcoolccool_8, hcoolccool_17 <= hcoolccool_4, hcoolccool_17 <= hcoolccool_24, hcoolccool_17 <= hcoolccool_16, hcoolccool_17 <= hcoolccool_0, hcoolccool_17 <= hcoolccool_21, hcoolccool_17 <= hcoolccool_30, hcoolccool_17 <= hcoolccool_9, hcoolccool_17 <= hcoolccool_19, hcoolccool_17 <= hcoolccool_31, hcoolccool_17 <= hcoolccool_13, hcoolccool_17 <= hcoolccool_5, hcoolccool_17 <= hcoolccool_25, hcoolccool_17 <= hcoolccool_20, hcoolccool_17 <= hcoolccool_22, hcoolccool_17 <= hcoolccool_10, hcoolccool_17 <= hcoolccool_3, hcoolccool_17 <= hcoolccool_29, hcoolccool_17 <= hcoolccool_26, hcoolccool_17 <= hcoolccool_14, hcoolccool_17 <= hcoolccool_6, hcoolccool_17 <= hcoolccool_18, hcoolccool_17 <= hcoolccool_11, hcoolccool_17 <= hcoolccool_23, hcoolccool_17 <= hcoolccool_2, hcoolccool_17 <= hcoolccool_28, hcoolccool_17 <= hcoolccool_27, hcoolccool_17 <= hcoolccool_7, hcoolccool_17 <= hcoolccool_15)), And(hcoolc == hcoolccool_20, And(hcoolccool_20 <= hcoolccool_18, hcoolccool_20 <= hcoolccool_29, hcoolccool_20 <= hcoolccool_7, hcoolccool_20 <= hcoolccool_2, hcoolccool_20 <= hcoolccool_24, hcoolccool_20 <= hcoolccool_13, hcoolccool_20 <= hcoolccool_1, hcoolccool_20 <= hcoolccool_28, hcoolccool_20 <= hcoolccool_17, hcoolccool_20 <= hcoolccool_8, hcoolccool_20 <= hcoolccool_4, hcoolccool_20 <= hcoolccool_31, hcoolccool_20 <= hcoolccool_0, hcoolccool_20 <= hcoolccool_14, hcoolccool_20 <= hcoolccool_25, hcoolccool_20 <= hcoolccool_11, hcoolccool_20 <= hcoolccool_5, hcoolccool_20 <= hcoolccool_9, hcoolccool_20 <= hcoolccool_10, hcoolccool_20 <= hcoolccool_26, hcoolccool_20 <= hcoolccool_21, hcoolccool_20 <= hcoolccool_15, hcoolccool_20 <= hcoolccool_23, hcoolccool_20 <= hcoolccool_12, hcoolccool_20 <= hcoolccool_30, hcoolccool_20 <= hcoolccool_6, hcoolccool_20 <= hcoolccool_3, hcoolccool_20 <= hcoolccool_19, hcoolccool_20 <= hcoolccool_27, hcoolccool_20 <= hcoolccool_22, hcoolccool_20 <= hcoolccool_16)), And(hcoolc == hcoolccool_4, And(hcoolccool_4 <= hcoolccool_9, hcoolccool_4 <= hcoolccool_5, hcoolccool_4 <= hcoolccool_6, hcoolccool_4 <= hcoolccool_1, hcoolccool_4 <= hcoolccool_18, hcoolccool_4 <= hcoolccool_22, hcoolccool_4 <= hcoolccool_30, hcoolccool_4 <= hcoolccool_12, hcoolccool_4 <= hcoolccool_26, hcoolccool_4 <= hcoolccool_13, hcoolccool_4 <= hcoolccool_0, hcoolccool_4 <= hcoolccool_25, hcoolccool_4 <= hcoolccool_16, hcoolccool_4 <= hcoolccool_3, hcoolccool_4 <= hcoolccool_17, hcoolccool_4 <= hcoolccool_21, hcoolccool_4 <= hcoolccool_7, hcoolccool_4 <= hcoolccool_27, hcoolccool_4 <= hcoolccool_28, hcoolccool_4 <= hcoolccool_10, hcoolccool_4 <= hcoolccool_24, hcoolccool_4 <= hcoolccool_15, hcoolccool_4 <= hcoolccool_14, hcoolccool_4 <= hcoolccool_20, hcoolccool_4 <= hcoolccool_31, hcoolccool_4 <= hcoolccool_2, hcoolccool_4 <= hcoolccool_8, hcoolccool_4 <= hcoolccool_19, hcoolccool_4 <= hcoolccool_29, hcoolccool_4 <= hcoolccool_11, hcoolccool_4 <= hcoolccool_23)), And(hcoolc == hcoolccool_7, And(hcoolccool_7 <= hcoolccool_13, hcoolccool_7 <= hcoolccool_19, hcoolccool_7 <= hcoolccool_24, hcoolccool_7 <= hcoolccool_3, hcoolccool_7 <= hcoolccool_29, hcoolccool_7 <= hcoolccool_31, hcoolccool_7 <= hcoolccool_8, hcoolccool_7 <= hcoolccool_25, hcoolccool_7 <= hcoolccool_15, hcoolccool_7 <= hcoolccool_10, hcoolccool_7 <= hcoolccool_21, hcoolccool_7 <= hcoolccool_9, hcoolccool_7 <= hcoolccool_14, hcoolccool_7 <= hcoolccool_26, hcoolccool_7 <= hcoolccool_2, hcoolccool_7 <= hcoolccool_18, hcoolccool_7 <= hcoolccool_4, hcoolccool_7 <= hcoolccool_16, hcoolccool_7 <= hcoolccool_11, hcoolccool_7 <= hcoolccool_30, hcoolccool_7 <= hcoolccool_20, hcoolccool_7 <= hcoolccool_0, hcoolccool_7 <= hcoolccool_22, hcoolccool_7 <= hcoolccool_5, hcoolccool_7 <= hcoolccool_1, hcoolccool_7 <= hcoolccool_27, hcoolccool_7 <= hcoolccool_17, hcoolccool_7 <= hcoolccool_28, hcoolccool_7 <= hcoolccool_12, hcoolccool_7 <= hcoolccool_23, hcoolccool_7 <= hcoolccool_6)), And(hcoolc == hcoolccool_18, And(hcoolccool_18 <= hcoolccool_17, hcoolccool_18 <= hcoolccool_24, hcoolccool_18 <= hcoolccool_6, hcoolccool_18 <= hcoolccool_31, hcoolccool_18 <= hcoolccool_10, hcoolccool_18 <= hcoolccool_29, hcoolccool_18 <= hcoolccool_13, hcoolccool_18 <= hcoolccool_28, hcoolccool_18 <= hcoolccool_23, hcoolccool_18 <= hcoolccool_16, hcoolccool_18 <= hcoolccool_7, hcoolccool_18 <= hcoolccool_20, hcoolccool_18 <= hcoolccool_2, hcoolccool_18 <= hcoolccool_19, hcoolccool_18 <= hcoolccool_27, hcoolccool_18 <= hcoolccool_12, hcoolccool_18 <= hcoolccool_8, hcoolccool_18 <= hcoolccool_15, hcoolccool_18 <= hcoolccool_26, hcoolccool_18 <= hcoolccool_1, hcoolccool_18 <= hcoolccool_3, hcoolccool_18 <= hcoolccool_9, hcoolccool_18 <= hcoolccool_5, hcoolccool_18 <= hcoolccool_14, hcoolccool_18 <= hcoolccool_21, hcoolccool_18 <= hcoolccool_0, hcoolccool_18 <= hcoolccool_11, hcoolccool_18 <= hcoolccool_22, hcoolccool_18 <= hcoolccool_30, hcoolccool_18 <= hcoolccool_25, hcoolccool_18 <= hcoolccool_4)), And(hcoolc == hcoolccool_26, And(hcoolccool_26 <= hcoolccool_9, hcoolccool_26 <= hcoolccool_22, hcoolccool_26 <= hcoolccool_16, hcoolccool_26 <= hcoolccool_11, hcoolccool_26 <= hcoolccool_17, hcoolccool_26 <= hcoolccool_28, hcoolccool_26 <= hcoolccool_4, hcoolccool_26 <= hcoolccool_14, hcoolccool_26 <= hcoolccool_21, hcoolccool_26 <= hcoolccool_8, hcoolccool_26 <= hcoolccool_10, hcoolccool_26 <= hcoolccool_25, hcoolccool_26 <= hcoolccool_27, hcoolccool_26 <= hcoolccool_0, hcoolccool_26 <= hcoolccool_5, hcoolccool_26 <= hcoolccool_18, hcoolccool_26 <= hcoolccool_31, hcoolccool_26 <= hcoolccool_13, hcoolccool_26 <= hcoolccool_24, hcoolccool_26 <= hcoolccool_7, hcoolccool_26 <= hcoolccool_2, hcoolccool_26 <= hcoolccool_20, hcoolccool_26 <= hcoolccool_1, hcoolccool_26 <= hcoolccool_23, hcoolccool_26 <= hcoolccool_12, hcoolccool_26 <= hcoolccool_30, hcoolccool_26 <= hcoolccool_6, hcoolccool_26 <= hcoolccool_3, hcoolccool_26 <= hcoolccool_15, hcoolccool_26 <= hcoolccool_29, hcoolccool_26 <= hcoolccool_19)), And(hcoolc == hcoolccool_25, And(hcoolccool_25 <= hcoolccool_10, hcoolccool_25 <= hcoolccool_27, hcoolccool_25 <= hcoolccool_16, hcoolccool_25 <= hcoolccool_21, hcoolccool_25 <= hcoolccool_3, hcoolccool_25 <= hcoolccool_9, hcoolccool_25 <= hcoolccool_28, hcoolccool_25 <= hcoolccool_2, hcoolccool_25 <= hcoolccool_6, hcoolccool_25 <= hcoolccool_7, hcoolccool_25 <= hcoolccool_24, hcoolccool_25 <= hcoolccool_17, hcoolccool_25 <= hcoolccool_14, hcoolccool_25 <= hcoolccool_29, hcoolccool_25 <= hcoolccool_1, hcoolccool_25 <= hcoolccool_13, hcoolccool_25 <= hcoolccool_23, hcoolccool_25 <= hcoolccool_5, hcoolccool_25 <= hcoolccool_18, hcoolccool_25 <= hcoolccool_31, hcoolccool_25 <= hcoolccool_20, hcoolccool_25 <= hcoolccool_0, hcoolccool_25 <= hcoolccool_11, hcoolccool_25 <= hcoolccool_26, hcoolccool_25 <= hcoolccool_22, hcoolccool_25 <= hcoolccool_19, hcoolccool_25 <= hcoolccool_8, hcoolccool_25 <= hcoolccool_12, hcoolccool_25 <= hcoolccool_15, hcoolccool_25 <= hcoolccool_4, hcoolccool_25 <= hcoolccool_30)), And(hcoolc == hcoolccool_24, And(hcoolccool_24 <= hcoolccool_4, hcoolccool_24 <= hcoolccool_0, hcoolccool_24 <= hcoolccool_27, hcoolccool_24 <= hcoolccool_31, hcoolccool_24 <= hcoolccool_9, hcoolccool_24 <= hcoolccool_16, hcoolccool_24 <= hcoolccool_20, hcoolccool_24 <= hcoolccool_5, hcoolccool_24 <= hcoolccool_15, hcoolccool_24 <= hcoolccool_1, hcoolccool_24 <= hcoolccool_19, hcoolccool_24 <= hcoolccool_26, hcoolccool_24 <= hcoolccool_8, hcoolccool_24 <= hcoolccool_21, hcoolccool_24 <= hcoolccool_18, hcoolccool_24 <= hcoolccool_6, hcoolccool_24 <= hcoolccool_25, hcoolccool_24 <= hcoolccool_14, hcoolccool_24 <= hcoolccool_29, hcoolccool_24 <= hcoolccool_10, hcoolccool_24 <= hcoolccool_22, hcoolccool_24 <= hcoolccool_2, hcoolccool_24 <= hcoolccool_11, hcoolccool_24 <= hcoolccool_17, hcoolccool_24 <= hcoolccool_28, hcoolccool_24 <= hcoolccool_30, hcoolccool_24 <= hcoolccool_7, hcoolccool_24 <= hcoolccool_13, hcoolccool_24 <= hcoolccool_12, hcoolccool_24 <= hcoolccool_23, hcoolccool_24 <= hcoolccool_3)), And(hcoolc == hcoolccool_29, And(hcoolccool_29 <= hcoolccool_14, hcoolccool_29 <= hcoolccool_28, hcoolccool_29 <= hcoolccool_21, hcoolccool_29 <= hcoolccool_11, hcoolccool_29 <= hcoolccool_7, hcoolccool_29 <= hcoolccool_12, hcoolccool_29 <= hcoolccool_15, hcoolccool_29 <= hcoolccool_25, hcoolccool_29 <= hcoolccool_2, hcoolccool_29 <= hcoolccool_22, hcoolccool_29 <= hcoolccool_3, hcoolccool_29 <= hcoolccool_8, hcoolccool_29 <= hcoolccool_19, hcoolccool_29 <= hcoolccool_1, hcoolccool_29 <= hcoolccool_23, hcoolccool_29 <= hcoolccool_13, hcoolccool_29 <= hcoolccool_26, hcoolccool_29 <= hcoolccool_16, hcoolccool_29 <= hcoolccool_4, hcoolccool_29 <= hcoolccool_31, hcoolccool_29 <= hcoolccool_18, hcoolccool_29 <= hcoolccool_20, hcoolccool_29 <= hcoolccool_9, hcoolccool_29 <= hcoolccool_27, hcoolccool_29 <= hcoolccool_24, hcoolccool_29 <= hcoolccool_6, hcoolccool_29 <= hcoolccool_0, hcoolccool_29 <= hcoolccool_17, hcoolccool_29 <= hcoolccool_10, hcoolccool_29 <= hcoolccool_30, hcoolccool_29 <= hcoolccool_5)), And(hcoolc == hcoolccool_31, And(hcoolccool_31 <= hcoolccool_8, hcoolccool_31 <= hcoolccool_3, hcoolccool_31 <= hcoolccool_28, hcoolccool_31 <= hcoolccool_17, hcoolccool_31 <= hcoolccool_10, hcoolccool_31 <= hcoolccool_25, hcoolccool_31 <= hcoolccool_14, hcoolccool_31 <= hcoolccool_21, hcoolccool_31 <= hcoolccool_4, hcoolccool_31 <= hcoolccool_2, hcoolccool_31 <= hcoolccool_9, hcoolccool_31 <= hcoolccool_30, hcoolccool_31 <= hcoolccool_29, hcoolccool_31 <= hcoolccool_18, hcoolccool_31 <= hcoolccool_24, hcoolccool_31 <= hcoolccool_1, hcoolccool_31 <= hcoolccool_13, hcoolccool_31 <= hcoolccool_5, hcoolccool_31 <= hcoolccool_19, hcoolccool_31 <= hcoolccool_20, hcoolccool_31 <= hcoolccool_12, hcoolccool_31 <= hcoolccool_16, hcoolccool_31 <= hcoolccool_0, hcoolccool_31 <= hcoolccool_23, hcoolccool_31 <= hcoolccool_27, hcoolccool_31 <= hcoolccool_6, hcoolccool_31 <= hcoolccool_22, hcoolccool_31 <= hcoolccool_15, hcoolccool_31 <= hcoolccool_11, hcoolccool_31 <= hcoolccool_26, hcoolccool_31 <= hcoolccool_7)), And(hcoolc == hcoolccool_2, And(hcoolccool_2 <= hcoolccool_0, hcoolccool_2 <= hcoolccool_3, hcoolccool_2 <= hcoolccool_8, hcoolccool_2 <= hcoolccool_22, hcoolccool_2 <= hcoolccool_27, hcoolccool_2 <= hcoolccool_10, hcoolccool_2 <= hcoolccool_16, hcoolccool_2 <= hcoolccool_19, hcoolccool_2 <= hcoolccool_23, hcoolccool_2 <= hcoolccool_9, hcoolccool_2 <= hcoolccool_7, hcoolccool_2 <= hcoolccool_11, hcoolccool_2 <= hcoolccool_6, hcoolccool_2 <= hcoolccool_26, hcoolccool_2 <= hcoolccool_15, hcoolccool_2 <= hcoolccool_20, hcoolccool_2 <= hcoolccool_18, hcoolccool_2 <= hcoolccool_31, hcoolccool_2 <= hcoolccool_30, hcoolccool_2 <= hcoolccool_14, hcoolccool_2 <= hcoolccool_12, hcoolccool_2 <= hcoolccool_29, hcoolccool_2 <= hcoolccool_5, hcoolccool_2 <= hcoolccool_25, hcoolccool_2 <= hcoolccool_1, hcoolccool_2 <= hcoolccool_21, hcoolccool_2 <= hcoolccool_17, hcoolccool_2 <= hcoolccool_28, hcoolccool_2 <= hcoolccool_13, hcoolccool_2 <= hcoolccool_4, hcoolccool_2 <= hcoolccool_24)), And(hcoolc == hcoolccool_23, And(hcoolccool_23 <= hcoolccool_17, hcoolccool_23 <= hcoolccool_13, hcoolccool_23 <= hcoolccool_7, hcoolccool_23 <= hcoolccool_30, hcoolccool_23 <= hcoolccool_24, hcoolccool_23 <= hcoolccool_18, hcoolccool_23 <= hcoolccool_29, hcoolccool_23 <= hcoolccool_11, hcoolccool_23 <= hcoolccool_22, hcoolccool_23 <= hcoolccool_3, hcoolccool_23 <= hcoolccool_6, hcoolccool_23 <= hcoolccool_14, hcoolccool_23 <= hcoolccool_25, hcoolccool_23 <= hcoolccool_2, hcoolccool_23 <= hcoolccool_19, hcoolccool_23 <= hcoolccool_21, hcoolccool_23 <= hcoolccool_10, hcoolccool_23 <= hcoolccool_15, hcoolccool_23 <= hcoolccool_26, hcoolccool_23 <= hcoolccool_5, hcoolccool_23 <= hcoolccool_4, hcoolccool_23 <= hcoolccool_1, hcoolccool_23 <= hcoolccool_27, hcoolccool_23 <= hcoolccool_8, hcoolccool_23 <= hcoolccool_31, hcoolccool_23 <= hcoolccool_16, hcoolccool_23 <= hcoolccool_28, hcoolccool_23 <= hcoolccool_12, hcoolccool_23 <= hcoolccool_9, hcoolccool_23 <= hcoolccool_0, hcoolccool_23 <= hcoolccool_20)), And(hcoolc == hcoolccool_27, And(hcoolccool_27 <= hcoolccool_12, hcoolccool_27 <= hcoolccool_0, hcoolccool_27 <= hcoolccool_16, hcoolccool_27 <= hcoolccool_23, hcoolccool_27 <= hcoolccool_19, hcoolccool_27 <= hcoolccool_5, hcoolccool_27 <= hcoolccool_8, hcoolccool_27 <= hcoolccool_9, hcoolccool_27 <= hcoolccool_6, hcoolccool_27 <= hcoolccool_13, hcoolccool_27 <= hcoolccool_3, hcoolccool_27 <= hcoolccool_18, hcoolccool_27 <= hcoolccool_24, hcoolccool_27 <= hcoolccool_29, hcoolccool_27 <= hcoolccool_30, hcoolccool_27 <= hcoolccool_2, hcoolccool_27 <= hcoolccool_7, hcoolccool_27 <= hcoolccool_14, hcoolccool_27 <= hcoolccool_25, hcoolccool_27 <= hcoolccool_20, hcoolccool_27 <= hcoolccool_31, hcoolccool_27 <= hcoolccool_10, hcoolccool_27 <= hcoolccool_4, hcoolccool_27 <= hcoolccool_21, hcoolccool_27 <= hcoolccool_26, hcoolccool_27 <= hcoolccool_17, hcoolccool_27 <= hcoolccool_28, hcoolccool_27 <= hcoolccool_1, hcoolccool_27 <= hcoolccool_15, hcoolccool_27 <= hcoolccool_22, hcoolccool_27 <= hcoolccool_11)), And(hcoolc == hcoolccool_19, And(hcoolccool_19 <= hcoolccool_31, hcoolccool_19 <= hcoolccool_20, hcoolccool_19 <= hcoolccool_3, hcoolccool_19 <= hcoolccool_7, hcoolccool_19 <= hcoolccool_28, hcoolccool_19 <= hcoolccool_17, hcoolccool_19 <= hcoolccool_9, hcoolccool_19 <= hcoolccool_2, hcoolccool_19 <= hcoolccool_16, hcoolccool_19 <= hcoolccool_10, hcoolccool_19 <= hcoolccool_21, hcoolccool_19 <= hcoolccool_27, hcoolccool_19 <= hcoolccool_6, hcoolccool_19 <= hcoolccool_13, hcoolccool_19 <= hcoolccool_24, hcoolccool_19 <= hcoolccool_26, hcoolccool_19 <= hcoolccool_0, hcoolccool_19 <= hcoolccool_5, hcoolccool_19 <= hcoolccool_15, hcoolccool_19 <= hcoolccool_23, hcoolccool_19 <= hcoolccool_12, hcoolccool_19 <= hcoolccool_4, hcoolccool_19 <= hcoolccool_30, hcoolccool_19 <= hcoolccool_14, hcoolccool_19 <= hcoolccool_11, hcoolccool_19 <= hcoolccool_25, hcoolccool_19 <= hcoolccool_1, hcoolccool_19 <= hcoolccool_29, hcoolccool_19 <= hcoolccool_8, hcoolccool_19 <= hcoolccool_18, hcoolccool_19 <= hcoolccool_22)), And(hcoolc == hcoolccool_8, And(hcoolccool_8 <= hcoolccool_18, hcoolccool_8 <= hcoolccool_24, hcoolccool_8 <= hcoolccool_14, hcoolccool_8 <= hcoolccool_21, hcoolccool_8 <= hcoolccool_2, hcoolccool_8 <= hcoolccool_6, hcoolccool_8 <= hcoolccool_28, hcoolccool_8 <= hcoolccool_5, hcoolccool_8 <= hcoolccool_17, hcoolccool_8 <= hcoolccool_23, hcoolccool_8 <= hcoolccool_13, hcoolccool_8 <= hcoolccool_30, hcoolccool_8 <= hcoolccool_27, hcoolccool_8 <= hcoolccool_0, hcoolccool_8 <= hcoolccool_9, hcoolccool_8 <= hcoolccool_31, hcoolccool_8 <= hcoolccool_12, hcoolccool_8 <= hcoolccool_20, hcoolccool_8 <= hcoolccool_7, hcoolccool_8 <= hcoolccool_1, hcoolccool_8 <= hcoolccool_22, hcoolccool_8 <= hcoolccool_4, hcoolccool_8 <= hcoolccool_16, hcoolccool_8 <= hcoolccool_26, hcoolccool_8 <= hcoolccool_19, hcoolccool_8 <= hcoolccool_3, hcoolccool_8 <= hcoolccool_29, hcoolccool_8 <= hcoolccool_11, hcoolccool_8 <= hcoolccool_10, hcoolccool_8 <= hcoolccool_25, hcoolccool_8 <= hcoolccool_15)), And(hcoolc == hcoolccool_10, And(hcoolccool_10 <= hcoolccool_26, hcoolccool_10 <= hcoolccool_2, hcoolccool_10 <= hcoolccool_12, hcoolccool_10 <= hcoolccool_21, hcoolccool_10 <= hcoolccool_19, hcoolccool_10 <= hcoolccool_16, hcoolccool_10 <= hcoolccool_20, hcoolccool_10 <= hcoolccool_3, hcoolccool_10 <= hcoolccool_31, hcoolccool_10 <= hcoolccool_7, hcoolccool_10 <= hcoolccool_11, hcoolccool_10 <= hcoolccool_27, hcoolccool_10 <= hcoolccool_1, hcoolccool_10 <= hcoolccool_15, hcoolccool_10 <= hcoolccool_22, hcoolccool_10 <= hcoolccool_4, hcoolccool_10 <= hcoolccool_30, hcoolccool_10 <= hcoolccool_8, hcoolccool_10 <= hcoolccool_23, hcoolccool_10 <= hcoolccool_28, hcoolccool_10 <= hcoolccool_14, hcoolccool_10 <= hcoolccool_0, hcoolccool_10 <= hcoolccool_9, hcoolccool_10 <= hcoolccool_29, hcoolccool_10 <= hcoolccool_24, hcoolccool_10 <= hcoolccool_5, hcoolccool_10 <= hcoolccool_13, hcoolccool_10 <= hcoolccool_18, hcoolccool_10 <= hcoolccool_17, hcoolccool_10 <= hcoolccool_6, hcoolccool_10 <= hcoolccool_25))), hcool_2 == hcoolccool_2, hcool_4 == hcoolccool_4, hcool_11 == hcoolccool_11, hcool_24 == hcoolccool_24, hcool_30 == hcoolccool_30, hcool_27 == hcoolccool_27, hcool_31 == hcoolccool_31, hcool_23 == hcoolccool_23, hcool_1 == hcoolccool_1, hcool_14 == hcoolccool_14, hcool_22 == hcoolccool_22, hrestc == hrestcrest_0, hcool_28 == hcoolccool_28, hcool_7 == hcoolccool_7, hcool_12 == hcoolccool_12, hcool_29 == hcoolccool_29, hcool_9 == hcoolccool_9, hcool_18 == hcoolccool_18, hcool_19 == hcoolccool_19, hcool_3 == hcoolccool_3, hcool_16 == hcoolccool_16, hcool_13 == hcoolccool_13, hcool_26 == hcoolccool_26, hcool_17 == hcoolccool_17, hcool_8 == hcoolccool_8, hcool_25 == hcoolccool_25, hcool_15 == hcoolccool_15, hcool_0 == hcoolccool_0, hrest_0 == hrestcrest_0, hcool_20 == hcoolccool_20, hcool_10 == hcoolccool_10, hcool_6 == hcoolccool_6, hcool_5 == hcoolccool_5, hcool_21 == hcoolccool_21)
Sep = And(And(Or(hcoolccool_1 - hcoolccool_18 >= 0, hcoolccool_18 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_6 >= 0, hcoolccool_6 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_29 >= 0, hcoolccool_29 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_23 >= 0, hcoolccool_23 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_22 >= 0, hcoolccool_22 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_30 >= 0, hcoolccool_30 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_11 >= 0, hcoolccool_11 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_26 >= 0, hcoolccool_26 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_15 >= 0, hcoolccool_15 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_1 >= 0), Or(hcoolccool_1 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_1 >= 0), Or(hcoolccool_18 - hcoolccool_6 >= 0, hcoolccool_6 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_29 >= 0, hcoolccool_29 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_23 >= 0, hcoolccool_23 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_22 >= 0, hcoolccool_22 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_30 >= 0, hcoolccool_30 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_11 >= 0, hcoolccool_11 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_26 >= 0, hcoolccool_26 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_15 >= 0, hcoolccool_15 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_18 >= 0), Or(hcoolccool_18 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_18 >= 0), Or(hcoolccool_6 - hcoolccool_29 >= 0, hcoolccool_29 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_23 >= 0, hcoolccool_23 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_22 >= 0, hcoolccool_22 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_30 >= 0, hcoolccool_30 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_11 >= 0, hcoolccool_11 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_26 >= 0, hcoolccool_26 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_15 >= 0, hcoolccool_15 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_6 >= 0), Or(hcoolccool_6 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_6 >= 0), Or(hcoolccool_29 - hcoolccool_23 >= 0, hcoolccool_23 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_22 >= 0, hcoolccool_22 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_30 >= 0, hcoolccool_30 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_11 >= 0, hcoolccool_11 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_26 >= 0, hcoolccool_26 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_15 >= 0, hcoolccool_15 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_29 >= 0), Or(hcoolccool_29 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_29 >= 0), Or(hcoolccool_23 - hcoolccool_22 >= 0, hcoolccool_22 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_30 >= 0, hcoolccool_30 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_11 >= 0, hcoolccool_11 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_26 >= 0, hcoolccool_26 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_15 >= 0, hcoolccool_15 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_23 >= 0), Or(hcoolccool_23 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_23 >= 0), Or(hcoolccool_22 - hcoolccool_30 >= 0, hcoolccool_30 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_11 >= 0, hcoolccool_11 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_26 >= 0, hcoolccool_26 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_15 >= 0, hcoolccool_15 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_22 >= 0), Or(hcoolccool_22 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_22 >= 0), Or(hcoolccool_30 - hcoolccool_11 >= 0, hcoolccool_11 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_26 >= 0, hcoolccool_26 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_15 >= 0, hcoolccool_15 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_30 >= 0), Or(hcoolccool_30 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_30 >= 0), Or(hcoolccool_11 - hcoolccool_26 >= 0, hcoolccool_26 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_15 >= 0, hcoolccool_15 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_11 >= 0), Or(hcoolccool_11 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_11 >= 0), Or(hcoolccool_26 - hcoolccool_15 >= 0, hcoolccool_15 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_26 >= 0), Or(hcoolccool_26 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_26 >= 0), Or(hcoolccool_15 - hcoolccool_19 >= 0, hcoolccool_19 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_15 >= 0), Or(hcoolccool_15 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_15 >= 0), Or(hcoolccool_19 - hcoolccool_9 >= 0, hcoolccool_9 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_19 >= 0), Or(hcoolccool_19 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_19 >= 0), Or(hcoolccool_9 - hcoolccool_31 >= 0, hcoolccool_31 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_9 >= 0), Or(hcoolccool_9 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_9 >= 0), Or(hcoolccool_31 - hcoolccool_21 >= 0, hcoolccool_21 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_31 >= 0), Or(hcoolccool_31 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_31 >= 0), Or(hcoolccool_21 - hcoolccool_10 >= 0, hcoolccool_10 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_21 >= 0), Or(hcoolccool_21 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_21 >= 0), Or(hcoolccool_10 - hcoolccool_2 >= 0, hcoolccool_2 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_10 >= 0), Or(hcoolccool_10 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_10 >= 0), Or(hcoolccool_2 - hcoolccool_16 >= 0, hcoolccool_16 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_2 >= 0), Or(hcoolccool_2 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_2 >= 0), Or(hcoolccool_16 - hcoolccool_27 >= 0, hcoolccool_27 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_16 >= 0), Or(hcoolccool_16 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_16 >= 0), Or(hcoolccool_27 - hcoolccool_3 >= 0, hcoolccool_3 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_27 >= 0), Or(hcoolccool_27 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_27 >= 0), Or(hcoolccool_3 - hcoolccool_8 >= 0, hcoolccool_8 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_3 >= 0), Or(hcoolccool_3 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_3 >= 0), Or(hcoolccool_8 - hcoolccool_25 >= 0, hcoolccool_25 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_8 >= 0), Or(hcoolccool_8 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_8 >= 0), Or(hcoolccool_25 - hcoolccool_14 >= 0, hcoolccool_14 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_25 >= 0), Or(hcoolccool_25 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_25 >= 0), Or(hcoolccool_14 - hcoolccool_20 >= 0, hcoolccool_20 - hcoolccool_14 >= 0), Or(hcoolccool_14 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_14 >= 0), Or(hcoolccool_14 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_14 >= 0), Or(hcoolccool_14 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_14 >= 0), Or(hcoolccool_14 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_14 >= 0), Or(hcoolccool_14 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_14 >= 0), Or(hcoolccool_14 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_14 >= 0), Or(hcoolccool_14 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_14 >= 0), Or(hcoolccool_14 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_14 >= 0), Or(hcoolccool_14 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_14 >= 0), Or(hcoolccool_20 - hcoolccool_28 >= 0, hcoolccool_28 - hcoolccool_20 >= 0), Or(hcoolccool_20 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_20 >= 0), Or(hcoolccool_20 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_20 >= 0), Or(hcoolccool_20 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_20 >= 0), Or(hcoolccool_20 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_20 >= 0), Or(hcoolccool_20 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_20 >= 0), Or(hcoolccool_20 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_20 >= 0), Or(hcoolccool_20 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_20 >= 0), Or(hcoolccool_20 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_20 >= 0), Or(hcoolccool_28 - hcoolccool_12 >= 0, hcoolccool_12 - hcoolccool_28 >= 0), Or(hcoolccool_28 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_28 >= 0), Or(hcoolccool_28 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_28 >= 0), Or(hcoolccool_28 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_28 >= 0), Or(hcoolccool_28 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_28 >= 0), Or(hcoolccool_28 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_28 >= 0), Or(hcoolccool_28 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_28 >= 0), Or(hcoolccool_28 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_28 >= 0), Or(hcoolccool_12 - hcoolccool_17 >= 0, hcoolccool_17 - hcoolccool_12 >= 0), Or(hcoolccool_12 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_12 >= 0), Or(hcoolccool_12 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_12 >= 0), Or(hcoolccool_12 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_12 >= 0), Or(hcoolccool_12 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_12 >= 0), Or(hcoolccool_12 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_12 >= 0), Or(hcoolccool_12 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_12 >= 0), Or(hcoolccool_17 - hcoolccool_7 >= 0, hcoolccool_7 - hcoolccool_17 >= 0), Or(hcoolccool_17 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_17 >= 0), Or(hcoolccool_17 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_17 >= 0), Or(hcoolccool_17 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_17 >= 0), Or(hcoolccool_17 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_17 >= 0), Or(hcoolccool_17 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_17 >= 0), Or(hcoolccool_7 - hcoolccool_5 >= 0, hcoolccool_5 - hcoolccool_7 >= 0), Or(hcoolccool_7 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_7 >= 0), Or(hcoolccool_7 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_7 >= 0), Or(hcoolccool_7 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_7 >= 0), Or(hcoolccool_7 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_7 >= 0), Or(hcoolccool_5 - hcoolccool_13 >= 0, hcoolccool_13 - hcoolccool_5 >= 0), Or(hcoolccool_5 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_5 >= 0), Or(hcoolccool_5 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_5 >= 0), Or(hcoolccool_5 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_5 >= 0), Or(hcoolccool_13 - hcoolccool_4 >= 0, hcoolccool_4 - hcoolccool_13 >= 0), Or(hcoolccool_13 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_13 >= 0), Or(hcoolccool_13 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_13 >= 0), Or(hcoolccool_4 - hcoolccool_24 >= 0, hcoolccool_24 - hcoolccool_4 >= 0), Or(hcoolccool_4 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_4 >= 0), Or(hcoolccool_24 - hcoolccool_0 >= 0, hcoolccool_0 - hcoolccool_24 >= 0)))
GihExt = And(ciRod_16hh, ciRod_9hh, ciRod_32hh, ciRod_10hh, ciRod_4hh, ciRod_23hh, ciRod_22hh, ciRod_27hh, ciRod_20hh, ciRod_11hh, ciRod_19hh, ciRod_26hh, cicontrollerhh, ciRod_30hh, ciRod_8hh, ciRod_5hh, ciRod_3hh, ciRod_31hh, ciRod_28hh, ciRod_15hh, ciRod_14hh, ciRod_0hh, ciRod_18hh, ciRod_29hh, ciRod_25hh, ciRod_17hh, ciRod_21hh, ciRod_13hh, ciRod_6hh, ciRod_1hh, ciRod_7hh, ciRod_2hh, ciRod_12hh, ciRod_24hh, EqsS, EqsC, Sep, AddInvs )
deadExt = And(GihExt, DisN)
print "Solving deadExt:" 
getCEX(deadExt)



safe = True
#Solving EF formula: 
EFformula = Exists([ct,p], And(Kp_all, ForAll([l0_16, l1_16, l0_9, l1_9, l0_32, l1_32, l0_10, l1_10, l0_4, l1_4, l0_23, l1_23, l0_22, l1_22, l0_27, l1_27, l0_20, l1_20, l0_11, l1_11, l0_19, l1_19, l0_26, l1_26, lc0, lc1, l0_30, l1_30, l0_8, l1_8, l0_5, l1_5, l0_3, l1_3, l0_31, l1_31, l0_28, l1_28, l0_15, l1_15, l0_14, l1_14, l0_0, l1_0, l0_18, l1_18, l0_29, l1_29, l0_25, l1_25, l0_17, l1_17, l0_21, l1_21, l0_13, l1_13, l0_6, l1_6, l0_1, l1_1, l0_7, l1_7, l0_2, l1_2, l0_12, l1_12, l0_24, l1_24, x_28, hrest_19, hcool_13, hrest_8, x_17, x_23, hrestc, hcool_29, x_12, hcool_6, hrest_24, hcool_1, hrest_13, hrest_12, hcool_20, hrest_23, hcool_5, x_24, x_30, x_2, hcool_24, x_29, x_13, hrest_1, hcool_31, hcool_9, hcool_19, hrest_27, hcool_0, x_8, hcoolc, hcool_26, hcool_15, hcool_32, hcool_10, x_31, hrest_16, x_20, x_6, hrest_22, x_1, hcool_21, hrest_17, xc, hrest_11, hcool_4, hcool_18, hrest_7, x_16, x_27, hcool_14, hcool_28, hrest_26, hrest_21, hrest_10, x_9, hrest_2, x_4, hrest_28, x_21, hrest_15, hrest_32, hcool_17, x_32, hcool_25, hcool_22, hcool_11, hrest_18, hcool_7, x_10, x_15, hrest_6, hcool_3, x_5, x_26, hrest_29, x_0, hcool_27, hrest_3, x_11, x_18, x_22, hcool_2, hrest_25, hcool_12, hrest_5, hrest_14, hcool_16, hrest_31, hrest_9, hrest_30, hcool_8, x_19, x_7, x_25, x_3, hcool_23, hrest_20, x_14, hrest_0, hcool_30, hrest_4, hcoolccool_13, hcoolccool_17, hcoolccool_5, hcoolccool_8, hcoolccool_10, hcoolccool_26, hcoolccool_16, hcoolccool_11, hcoolccool_4, hcoolccool_20, hcoolccool_25, hcoolccool_23, hcoolccool_12, hcoolccool_2, hcoolccool_19, hcoolccool_27, hcoolccool_30, hcoolccool_3, hcoolccool_6, hcoolccool_29, hcoolccool_21, hcoolccool_0, hcoolccool_31, hcoolccool_22, hcoolccool_14, hcoolccool_9, hrestcrest_0, hcoolccool_18, hcoolccool_28, hcoolccool_24, hcoolccool_15, hcoolccool_1, hcoolccool_7], Implies(Gih, And(safe, En)))))
s = Solver() 
s.add(EFformula) 
print s.check() 
print s.model()